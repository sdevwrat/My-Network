{"version":3,"sources":["isNull.js","setAuthToken.js","api.js","actions/actionType.js","actions/authAction.js","containers/createPost.js","actions/postAction.js","components/loading.js","actions/userAction.js","components/commentInput.js","components/commentBody.js","components/comments.js","components/post.js","components/postFeed.js","components/navBarMenu.js","containers/navBar.js","containers/homePage.js","containers/registerPage.js","containers/loginPage.js","components/userCard.js","containers/discoverPage.js","containers/profilePage.js","components/followerList.js","containers/followers.js","components/followingList.js","containers/followings.js","components/AppWithRouter.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/postReducer.js","reducers/userReducer.js","reducers/rootReducer.js","index.js","store.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","setAuthToken","token","axios","defaults","headers","common","Authorization","BASE_URL","api","users","login","register","follower","unfollower","following","unfollowing","posts","CREATE_POST","DELETE_POST","GET_POST","UPDATE_POST_LIKES","ADD_COMMENT","GET_ERRORS","IND_NO_ERRORS","SET_CURR_USER","GET_FOLLOWERS","GET_FOLLOWING","GET_ALL_USERS","GET_USER","UPDATE_FOLLOWERS","UPDATE_FOLLOWING","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","window","location","href","CreatePost","handleChange","e","setState","target","name","handleSubmit","preventDefault","console","log","props","createpost","state","postText","user","this","classes","className","container","noValidate","autoComplete","onSubmit","TextField","placeholder","multiline","textField","margin","rowsMax","onChange","Button","variant","color","button","Component","compose","withStyles","theme","spacing","unit","display","justifyContent","marginTop","marginLeft","marginRight","width","connect","authReducer","text","post","author","authorId","userId","then","res","data","createPost","progress","left","position","top","transform","CircularProgress","l","size","getUser","a","get","result","followUser","followerId","idToFollow","patch","followRes","addFollowRes","unfollowUser","idToUnfollow","unfollowRes","removeFollowRes","getFollowers","getFollowing","CommentInput","componentDidMount","commenterId","postComment","addComment","postId","CardHeader","title","cardHeaderTitle","Avatar","aria-label","avatar","charAt","commentField","onClick","marginBottom","cardHeader","paddingTop","paddingBottom","CommentBody","comment","commentContent","style","flexDirection","commenter","link","to","timestamp","moment","createdAt","fromNow","commentText","backgroundColor","borderRadius","padding","fontWeight","textDecoration","fontSize","Comments","comments","UserId","map","_id","Post","email","handleOpenComment","openComments","updatePostLikes","relativeTime","Card","card","src","action","IconButton","deletePost","subheader","CardContent","Typography","CardActions","actions","disableActionSpacing","likers","includes","likesCount","Collapse","in","timeout","unmountOnExit","PostFeed","getPosts","loading","showMyPosts","id","likerId","postReducer","delete","NavBarMenu","anchorEl","handleClick","event","currentTarget","handleClose","aria-owns","aria-haspopup","menuButton","alt","Menu","open","Boolean","onClose","MenuItem","outline","textTransform","NavBar","logout","root","AppBar","Toolbar","flex","logo","flexGrow","HomePage","jwtToken","history","push","registerPage","password","confirmPassword","errors","message","createUser","registered","success","nextProps","error","class","textAlign","border","maxWidth","required","autocomplete","disabled","auth","errorReducer","catch","err","response","registerUser","componentWillReceiveProps","isAuthenticated","signIn","setItem","jwtDecode","loginUser","UserCard","ava","height","currUserId","followers","DiscoverPage","getAllUsers","userReducer","classNames","layout","cardGrid","Grid","justify","allUsers","item","breakpoints","up","ProfilePage","match","params","pageUser","handleFollow","follows","signedInUser","unFollowUser","goToFollowing","goToFollowers","postCount","filter","background","cursor","FollowerList","ListItem","borderLeft","ListItemAvatar","ListItemText","primary","xs","md","grid","List","dense","demo","palette","paper","FollowingList","Unfollow","signedInUserId","UnfollowUser","reload","ListItemSecondaryAction","Followings","followings","followId","initAnalytics","createBrowserHistory","App","withRouter","withAnalytics","exact","path","component","loginPage","discoverPage","AppWithRouter","basename","process","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","initState","currUser","combineReducers","isNull","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","curr_time","Date","now","exp","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","status","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"iGAMAA,EAAOC,QANQ,SAAAC,GAAK,YACRC,IAAVD,GACa,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,S,+PCMjCE,EARM,SAACC,GAChBA,EACFC,IAAMC,SAASC,QAAQC,OAAOC,cAAgBL,SAEvCC,IAAMC,SAASC,QAAQC,OAAOC,eCNnCC,EAAW,wCAaFC,EAXH,CACRC,MAAMF,EAAS,QACfG,MAAMH,EAAS,cACfI,SAASJ,EAAS,iBAClBK,SAASL,EAAS,iBAClBM,WAAWN,EAAS,mBACpBO,UAAUP,EAAS,kBACnBQ,YAAYR,EAAS,oBACrBS,MAAMT,EAAS,SCVNU,EAAc,cACdC,EAAc,cACdC,EAAW,WACXC,EAAoB,oBAEpBC,EAAc,cAEdC,EAAa,aACbC,EAAgB,gBAChBC,EAAgB,gBAGhBC,EAAgB,gBAChBC,EAAgB,iBAChBC,EAAgB,gBAChBC,EAAW,WACXC,EAAmB,mBACnBC,EAAmB,mBC8BnBC,EAAiB,SAAAC,GAAO,MAAK,CACtCC,KAAKT,EACLU,QAAQF,IAGCG,EAAa,kBAAM,SAACC,GAC7BC,aAAaC,WAAW,YACxBtC,GAAa,GACboC,EAASL,EAAe,KACxBQ,OAAOC,SAASC,KAAO,W,kDC9BrBC,E,kDACF,aAAc,IAAD,8BACT,gBAMJC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOpD,SATtB,EAabsD,aAAe,SAACJ,GACZA,EAAEK,iBACFC,QAAQC,IAAI,UACZ,EAAKC,MAAMC,WAAW,EAAKC,MAAMC,SAAS,EAAKH,MAAMI,MACrD,EAAKX,SAAS,CAACU,SAAS,MAfxB,EAAKD,MAAQ,CACTC,SAAS,IAHJ,E,qDAoBJ,IACEA,EAAYE,KAAKH,MAAjBC,SACCG,EAAYD,KAAKL,MAAjBM,QACR,OACJ,uBACIC,UAAWD,EAAQE,UACnBC,YAAU,EACVC,aAAa,MACbC,SAAUN,KAAKT,aAJnB,UAMI,cAACgB,EAAA,EAAD,CACEjB,KAAK,WACLkB,YAAY,uBACZC,WAAS,EACTP,UAAWD,EAAQS,UACnBC,OAAO,SACPC,QAAQ,IACR3E,MAAO6D,EACPe,SAAUb,KAAKd,eAEjB,cAAC4B,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNd,UAAWD,EAAQgB,OACnBzC,KAAK,SAJP,yB,GAzCiB0C,aA8DVC,MACXC,aA/EW,SAAAC,GAAK,MAAK,CACrBJ,OAAQ,CACNN,OAAQU,EAAMC,QAAQC,MAExBpB,UAAW,CACTqB,QAAS,OACTC,eAAgB,SAChBC,UAAW,QAEbhB,UAAW,CACTiB,WAAYN,EAAMC,QAAQC,KAC1BK,YAAaP,EAAMC,QAAQC,KAC3BM,MAAO,SAoETC,aAVoB,SAAAjC,GAAK,MAAI,CAC7BE,KAAKF,EAAMkC,YAAYhC,SAGA,SAAApB,GAAQ,MAAI,CACnCiB,WAAW,SAACoC,EAAKjC,GAAN,OAAcpB,ECnEH,SAACqD,EAAKjC,GAAN,OAAe,SAAApB,GACrClC,IACKwF,KAAKlF,EAAIQ,MAAM,CACZyE,OACAE,OAAOnC,EAAKT,KACZ6C,SAASpC,EAAKqC,SAEjBC,MAAK,SAAAC,GAAG,OACR3D,EAAS,CACLH,KAAKhB,EACLiB,QAAQ6D,EAAIC,WDyDaC,CAAWR,EAAKjC,SAGvCoB,CAGblC,G,0DErEamC,eAhBA,CACbqB,SAAU,CACRC,KAAM,MACNC,SAAU,WACVC,IAAK,MACLC,UAAW,yBAWAzB,EAPC,SAAC,GAAD,IAAGnB,EAAH,EAAGA,QAAH,OACd,qBAAKC,UAAWD,EAAQwC,SAAxB,SACE,cAACK,EAAA,EAAD,CAAkB5C,UAAWD,EAAQ8C,EAAGC,KAAM,UCErCC,GAAU,SAACb,GAAD,8CAAY,WAAOzD,GAAP,eAAAuE,EAAA,+EAENzG,IAAM0G,IAAN,UAAapG,EAAIC,MAAjB,YAA0BoF,IAFpB,cAErBgB,EAFqB,yBAGpBzE,EAAS,CACZH,KAAML,EACNM,QAAS2E,EAAOb,QALO,wHAAZ,uDAYVc,GAAa,SAACC,EAAWC,GAAZ,8CAA2B,WAAO5E,GAAP,iBAAAuE,EAAA,sEACzBzG,IAAM+G,MAAN,UAAezG,EAAIM,UAAnB,YAAgCiG,GAAa,CAACC,eADrB,cAC3CE,EAD2C,gBAEtBhH,IAAM+G,MAAN,UAAezG,EAAII,SAAnB,YAA+BoG,GAAa,CAACD,eAFvB,cAE3CI,EAF2C,OAGjD/E,EAAS,CACLH,KAAKJ,EACLK,QAAQiF,EAAanB,OALwB,kBAO1C5D,EAAS,CACZH,KAAKH,EACLI,QAAQgF,EAAUlB,QAT2B,2CAA3B,uDAaboB,GAAe,SAACL,EAAWM,GAAZ,8CAA6B,WAAOjF,GAAP,iBAAAuE,EAAA,sEAC3BzG,IAAM+G,MAAN,UAAezG,EAAIO,YAAnB,YAAkCgG,GAAa,CAACM,iBADrB,cAC/CC,EAD+C,gBAEvBpH,IAAM+G,MAAN,UAAezG,EAAIK,WAAnB,YAAiCwG,GAAe,CAACN,eAF1B,cAE/CQ,EAF+C,OAGrDnF,EAAS,CACLH,KAAKJ,EACLK,QAAQqF,EAAgBvB,OALyB,kBAO9C5D,EAAS,CACZH,KAAKH,EACLI,QAAQoF,EAAYtB,QAT6B,2CAA7B,uDAafwB,GAAe,SAAA3B,GAAM,8CAAI,WAAOzD,GAAP,eAAAuE,EAAA,sEACbzG,IAAM0G,IAAN,UAAapG,EAAIC,MAAjB,YAA0BoF,IADb,cAC5BgB,EAD4B,yBAE3BzE,EAAS,CACdH,KAAMR,EACNS,QAAS2E,EAAOb,QAJgB,2CAAJ,uDAQnByB,GAAe,SAAA5B,GAAM,8CAAI,WAAOzD,GAAP,eAAAuE,EAAA,sEACfzG,IAAM0G,IAAN,UAAapG,EAAIC,MAAjB,YAA0BoF,IADX,cAC9BgB,EAD8B,yBAE7BzE,EAAS,CACdH,KAAMP,EACNQ,QAAS2E,EAAOb,QAJkB,2CAAJ,uD,iKCrC9B0B,G,kDACF,aAAc,IAAD,8BACT,gBAOJ/E,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOpD,SAVtB,EAcbiI,kBAAoB,WAAO,IAAD,EACW,EAAKvE,MAA9BwE,EADc,EACdA,aACRlB,EAFsB,EACDA,SACbkB,GAAa9B,MAAK,SAACC,GACzB,EAAKlD,SAAS,CACZE,KAAMgD,EAAI7D,QAAQsB,KAAKT,WAlBlB,EAuBb8E,YAAc,SAACjF,GACXA,EAAEK,iBAC4B,KAA3B,EAAKK,MAAMmC,KAAK1F,SAEnB,EAAKqD,MAAM0E,WAAW,EAAK1E,MAAMwE,YAAY,EAAKxE,MAAM2E,OAAO,EAAKzE,MAAMmC,MAC1E,EAAK5C,SAAS,CACV4C,KAAK,OA3BT,EAAKnC,MAAQ,CACTmC,KAAK,GACL1C,KAAK,IAJA,E,qDAiCJ,IACEW,EAAWD,KAAKL,MAAhBM,QACP,OACI,cAACsE,GAAA,EAAD,CAAYrE,UAAWD,EAAQsE,WAC/BC,MACI,sBAAKtE,UAAWD,EAAQwE,gBAAxB,UACI,cAACC,GAAA,EAAD,CAAQC,aAAW,SAASzE,UAAWD,EAAQ2E,OAA/C,SACO5E,KAAKH,MAAMP,KAAKuF,OAAO,KAE9B,cAACtE,EAAA,EAAD,CACIE,WAAS,EACTD,YAAY,kBACZN,UAAWD,EAAQ6E,aACnBjE,SAAUb,KAAKd,aACfI,KAAK,OACLrD,MAAO+D,KAAKH,MAAMmC,OAEtB,cAAClB,EAAA,EAAD,CACIC,QAAQ,YACRb,UAAWD,EAAQgB,OACnB8D,QAAS/E,KAAKoE,YAHlB,SAKA,cAAC,KAAD,e,GAxDOlD,aAiEZE,gBApFA,SAAAC,GAAK,MAAK,CACrBJ,OAAQ,CACN+D,aAAc3D,EAAMC,QAAQC,KAC5BI,WAAYN,EAAMC,QAAQC,MAE5B0D,WAAY,CACVC,WAAY7D,EAAMC,QAAQC,KAC1B4D,cAAe9D,EAAMC,QAAQC,MAE/BkD,gBAAiB,CACfjD,QAAS,QAEXsD,aAAc,CACZjD,MAAO,MACPF,WAAYN,EAAMC,QAAQC,KAC1BG,UAAWL,EAAMC,QAAQC,SAqEhBH,CAAmB6C,ICrD5BmB,G,4MACFvF,MAAQ,CACNP,KAAM,I,EAGR4E,kBAAoB,WAAO,IAAD,EACK,EAAKvE,MAA1B0F,EADgB,EAChBA,SACRpC,EAFwB,EACPA,SACToC,EAAQlB,aAAa9B,MAAK,SAACC,GACjC,EAAKlD,SAAS,CACZE,KAAMgD,EAAI7D,QAAQsB,KAAKT,W,uDAKpB,IAAD,EACsBU,KAAKL,MAAxBM,EADH,EACGA,QAAQoF,EADX,EACWA,QACR/F,EAAQU,KAAKH,MAAbP,KACP,OACI,cAACiF,GAAA,EAAD,CACAK,OACI,cAACF,GAAA,EAAD,CAAQC,aAAW,SAASzE,UAAWD,EAAQ2E,OAA/C,SACGtF,EAAKuF,OAAO,KAGnBL,MACI,sBAAKtE,UAAWD,EAAQqF,eAAxB,UACI,qBAAKC,MAAO,CAAE/D,QAAS,OAAQC,eAAgB,iBAA/C,SACK,sBAAK8D,MAAO,CAAEC,cAAe,UAA7B,UACG,qBAAKtF,UAAWD,EAAQwF,UAAxB,SACI,cAAC,IAAD,CAAMvF,UAAWD,EAAQyF,KAAMC,GAAE,SAAjC,SACKrG,MAGb,qBAAKY,UAAWD,EAAQ2F,UAAxB,SACGC,EAAOR,EAAQS,WAAWC,iBAIjC,qBAAK7F,UAAWD,EAAQ+F,YAAxB,SAAsCX,EAAQrD,gB,GAtCxCd,aA8CXE,gBAxEA,SAAAC,GAAK,MAAK,CACrB4D,WAAY,CACVC,WAAY7D,EAAMC,QAAQC,KAC1B4D,cAAe9D,EAAMC,QAAQC,MAE/B+D,eAAgB,CACdW,gBAAiB,UACjBC,aAAc,OACdC,QAAS9E,EAAMC,QAAQC,MAEzByE,YAAa,CACXI,WAAY,OAEdX,UAAW,CACTW,WAAY,OAEdV,KAAM,CACJ1E,MAAO,OACPqF,eAAgB,QAElBT,UAAW,CACTU,SAAS,WAmDAlF,CAAmBgE,ICvDnBmB,G,uKAvBF,IAAD,EAC4DvG,KAAKL,MAA9D0E,EADH,EACGA,WAAWF,EADd,EACcA,YAAYqC,EAD1B,EAC0BA,SAASlC,EADnC,EACmCA,OAAOrB,EAD1C,EAC0CA,QAD1C,EACkDwD,OACtD,OACI,gCACA,yBACGD,EAASnK,QAAUmK,EAASE,KAAI,SAAArB,GAAO,OACtC,cAAC,GAAD,CAEAA,QAAWA,EACXpC,QAAWA,GAFJoC,EAAQsB,QAKnB,cAAC,GAAD,CACItC,WAAcA,EACdF,YAAeA,EACfG,OAAUA,EACVrB,QAAWA,W,GAjBJ/B,aC0BjB0F,G,kDACF,aAAc,IAAD,8BACT,gBAOJ1C,kBARa,sBAQO,gCAAAhB,EAAA,+DACO,EAAKvD,MAArBsC,EADS,EACTA,KAAKgB,EADI,EACJA,QADI,SAEPA,EAAQhB,EAAKE,UAAUE,MAAK,SAACC,GAC3BA,IACC7C,QAAQC,IAAI,KAAK4C,GACjB,EAAKlD,SAAS,CACVyH,MAAMvE,EAAI7D,QAAQsB,KAAK8G,YANvB,2CARP,EAoBbC,kBAAoB,WAChB,EAAK1H,SAAS,CACV2H,cAAc,EAAKlH,MAAMkH,gBApB7B,EAAKlH,MAAQ,CACTgH,MAAM,GACNE,cAAa,GAJR,E,qDA0BJ,IAAD,SAC6D/G,KAAKL,MAA/DM,EADH,EACGA,QAAQgC,EADX,EACWA,KAAKG,EADhB,EACgBA,OAAO4E,EADvB,EACuBA,gBAAgB/D,EADvC,EACuCA,QAAQoB,EAD/C,EAC+CA,WAC7C4C,EAAepB,EAAO5D,EAAK6D,WAAWC,UAC5C,OACI,eAACmB,GAAA,EAAD,CAAMhH,UAAWD,EAAQkH,KAAzB,UACI,cAAC5C,GAAA,EAAD,CACIK,OACI,cAACF,GAAA,EAAD,CAAQC,aAAW,SAASzE,UAAWD,EAAQ2E,OAAQwC,IAAG,+BAA0BpH,KAAKH,MAAMgH,SAEjGQ,OACGpF,EAAKE,WAAaC,EAClB,cAACkF,GAAA,EAAD,CAAY3C,aAAW,WAAvB,SACC,cAAC,KAAD,CAAY3D,MAAM,YAAY+D,QAAW,kBAAM,EAAKpF,MAAM4H,WAAWtF,EAAK0E,UAC7D,KAEnBnC,MACA,cAAC,IAAD,CAAMtE,UAAWD,EAAQyF,KAAMC,GAAI,SAAnC,SACK1D,EAAKC,SAGVsF,UAAWP,IAEf,cAACQ,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UAAazF,EAAKD,SAEtB,eAAC2F,GAAA,EAAD,CAAazH,UAAaD,EAAQ2H,QAASC,sBAAoB,EAA/D,UACI,gCACI,cAACP,GAAA,EAAD,CAAY3C,aAAW,OACvBI,QAAW,kBAAM9C,EAAK6F,OAAOC,SAAS3F,GAAQ4E,EAAgB,SAAS/E,EAAK0E,IAAIvE,GAC9E4E,EAAgB,OAAO/E,EAAK0E,IAAIvE,IAFlC,SAII,cAAC,KAAD,CACAmD,MACItD,EAAK6F,OAAOC,SAAS3F,GAAU,CAAEpB,MAAO,WAAc,SAI7DiB,EAAK+F,cAEV,sBAAKzC,MAAO,CAAE5D,WAAY,QAA1B,UACI,cAAC2F,GAAA,EAAD,CAAYvC,QAAW/E,KAAK8G,kBAA5B,SACI,cAAC,KAAD,MAEH7E,EAAKuE,SAASnK,aAGvB,cAAC4L,GAAA,EAAD,CAAUC,GAAIlI,KAAKH,MAAMkH,aAAcoB,QAAQ,OAAOC,eAAa,EAAnE,SACI,cAAC,GAAD,CACI5B,SAAYvE,EAAKuE,SACjBlC,OAAUrC,EAAK0E,IACfxC,YAAe/B,EACfiC,WAAcA,EACdpB,QAAWA,a,GA/EhB/B,aAuFJE,gBArGA,SAAAC,GAAK,MAAK,CACrBuG,QAAQ,CACJpG,QAAQ,QAEZ2F,KAAK,CACDxG,OAAO,YACPkB,MAAM,OAEV6D,KAAM,CACF1E,MAAO,OACPqF,eAAgB,WA2FTjF,CAAmBwF,ICpG5ByB,G,kDACF,aAAc,IAAD,8BACT,gBAOJnE,kBARa,sBAQO,kCAAAhB,EAAA,2DACqB,EAAKvD,MAAnC2I,EADS,EACTA,SAAStE,EADA,EACAA,eAAajE,EADb,EACaA,MADb,gCAGVuI,IAAWjG,MAAK,WAClB2B,EAAajE,EAAKqC,QAAQC,MAAK,SAACC,GAC5B,IAAMjF,EAAaiF,EAAI7D,SAAW6D,EAAI7D,QAAQsB,KAAMuC,EAAI7D,QAAQsB,KAAK1C,UAAU,GAC/E,EAAK+B,SAAS,CAAC/B,YAAUkL,SAAQ,UANzB,2CANhB,EAAK1I,MAAQ,CACTtC,MAAM,GACNgL,SAAQ,GAJH,E,qDAmBJ,IAAD,SACuBvI,KAAKH,MAA1B0I,EADF,EACEA,QAAQlL,EADV,EACUA,UADV,EAE0D2C,KAAKL,MAA5DI,EAFH,EAEGA,KAAKkD,EAFR,EAEQA,QAAS+D,EAFjB,EAEiBA,gBAAgB3C,EAFjC,EAEiCA,WAAWkD,EAF5C,EAE4CA,WAChD,OAAOgB,EACH,cAAC,GAAD,IAEJ,mCACKvI,KAAKL,MAAMpC,MAAMmJ,KAAI,SAAAzE,GAClB,OAAS,EAAKtC,MAAM6I,aAAenL,EAAU0K,SAAS9F,EAAKE,WAAeF,EAAKE,WAAapC,EAAKqC,OACzF,cAAC,GAAD,CACIH,KAAQA,EACRG,OAAUrC,EAAKqC,OACfa,QAAS,SAAAwF,GAAE,OAAIxF,EAAQwF,IACvBzB,gBAAiB,SAACK,EAAQ/C,EAAQoE,GAAjB,OACb1B,EAAgBK,EAAQ/C,EAAQoE,IAEpCrE,WAAcA,EACdkD,WAAcA,IAExB,c,GAvCKrG,aAiFRY,gBAdS,SAAAjC,GAAK,MAAI,CAC7BE,KAAKF,EAAMkC,YAAYhC,KACvBxC,MAAMsC,EAAM8I,YAAYpL,UAGD,SAAAoB,GAAQ,MAAK,CACpC4I,WAAY,SAAAkB,GAAE,OAAI9J,EPrDI,SAAA8J,GAAE,OAAI,SAAA9J,GAAQ,OACtClC,IAAMmM,OAAN,UAAgB7L,EAAIQ,MAApB,YAA6BkL,IAAMpG,MAAK,SAAAC,GAAG,OACzC3D,EAAS,CACPH,KAAMf,EACNgL,WOiDyBlB,CAAWkB,KACtCH,SAAU,kBAAM3J,GPnFU,SAAAA,GAAQ,OACpClC,IAAM0G,IAAIpG,EAAIQ,OAAO8E,MAAK,SAAAC,GAAG,OAC3B3D,EAAS,CACPH,KAAMd,EACNe,QAAS6D,EAAIC,cOgFfU,QAAS,SAAAwF,GAAE,OAAI9J,EAASsE,GAAQwF,KAChCzE,aAAe,SAAAyE,GAAE,OAAI9J,EAASqF,GAAayE,KAC3CzB,gBAAiB,SAACK,EAAQ/C,EAAQoE,GAAjB,OAA4B/J,EPhElB,SAAC0I,EAAQ/C,EAAQoE,GAAjB,OAA6B,SAAA/J,GAAQ,OAClElC,IAAM+G,MAAN,UAAezG,EAAIQ,MAAnB,YAA4B+G,GAAU,CAAE+C,SAAQoB,GAAIC,IAAWrG,MAAK,SAAAC,GAAG,OACrE3D,EAAS,CACPH,KAAMb,EACNc,QAAS6D,EAAIC,WO4DuCyE,CAAgBK,EAAQ/C,EAAQoE,KACtFrE,WAAY,SAACF,EAAYG,EAAOtC,GAApB,OAA6BrD,EPnDnB,SAACwF,EAAYG,EAAOtC,GAApB,OAA6B,SAAArD,GAAQ,OACzDlC,IAAM+G,MAAN,UAAezG,EAAIQ,MAAnB,YAA4B+G,GAAS,CAAC+C,OAAO,aAAclD,cAAYnC,SACtEK,MAAK,SAAAC,GAAG,OACL3D,EAAS,CACPH,KAAKZ,EACLa,QAAQ6D,EAAIC,KACZ4B,cACAnC,aO4C0CqC,CAAWF,EAAYG,EAAOtC,QAGrEF,CAA4CuG,I,iDC7ErDQ,G,4MACJhJ,MAAQ,CACNiJ,SAAU,M,EAGZC,YAAc,SAACC,GACb,EAAK5J,SAAS,CAAE0J,SAAUE,EAAMC,iB,EAGlCC,YAAc,WACZ,EAAK9J,SAAS,CAAE0J,SAAU,Q,uDAGlB,IAAD,EAC+B9I,KAAKL,MAAnCM,EADD,EACCA,QAASvB,EADV,EACUA,WAAYqB,EADtB,EACsBA,KACrB+I,EAAa9I,KAAKH,MAAlBiJ,SAER,OACE,gCACE,eAAChI,EAAA,EAAD,CACEqI,YAAWL,EAAW,aAAe,KACrCM,gBAAc,OACdlJ,UAAWD,EAAQoJ,WACnBtE,QAAS/E,KAAK+I,YAJhB,UAME,cAACrE,GAAA,EAAD,CAAQ4E,IAAI,aAAcpJ,UAAWD,EAAQ2E,OAAQwC,IAAG,+BAA0BrH,EAAK8G,SACvF,oBAAItB,MAAO,CAACY,QAAQ,eAApB,SAAqCpG,EAAKT,UAE5C,eAACiK,GAAA,EAAD,CACEd,GAAG,aACHK,SAAUA,EACVU,KAAMC,QAAQX,GACdY,QAAS1J,KAAKkJ,YAJhB,UAMC,mBAAGhJ,UAAWD,EAAQyF,KAAM1G,KAAK,IAAjC,SACG,cAAC2K,GAAA,EAAD,CAAU5E,QAAS/E,KAAKkJ,YAAxB,oBAEF,mBAAGhJ,UAAWD,EAAQyF,KAAM1G,KAAI,mBAAce,EAAKqC,QAAnD,SACE,cAACuH,GAAA,EAAD,CAAU5E,QAAS/E,KAAKkJ,YAAxB,uBAEF,mBAAGhJ,UAAWD,EAAQyF,KAAM1G,KAAK,YAAjC,SACE,cAAC2K,GAAA,EAAD,CAAU5E,QAAS/E,KAAKkJ,YAAxB,wBAEF,cAACS,GAAA,EAAD,CAAU5E,QAAS,kBAAMrG,KAAzB,8B,GA3CewC,aAkDVE,eAhEA,CACbsE,KAAM,CACJkE,QAAS,OACTvD,eAAgB,OAChBrF,MAAM,SAERqI,WAAY,CACVrI,MAAO,OACPsF,SAAU,OACV1E,YAAa,QACbiI,cAAe,SAsDJzI,CAAmByH,ICzC5BiB,G,uKACQ,IAAD,EACwB9J,KAAKL,MAA3BM,EADF,EACEA,QAAQF,EADV,EACUA,KAAKgK,EADf,EACeA,OACpB,OACA,qBAAK7J,UAAWD,EAAQ+J,KAAxB,SACI,cAACC,GAAA,EAAD,CAAQtH,SAAS,SAAjB,SACI,eAACuH,GAAA,EAAD,WACA,cAACxC,GAAA,EAAD,CACIxH,UAAWD,EAAQkK,KACnBpJ,QAAQ,QACRC,MAAM,UAHV,SAKA,mBAAGd,UAAWD,EAAQmK,KAAMpL,KAAK,IAAjC,0BAIA,8BACI,cAAC,GAAD,CAAYN,WAAYqL,EAAQhK,KAAMA,iB,GAjBrCmB,aAkCNC,sBACXC,YArDW,CAEX+I,KAAM,CACJE,SAAU,GAEZD,KAAM,CACJpJ,MAAO,OACPqF,eAAgB,QAElBgD,WAAY,CACV1H,YAAa,GACbC,YAAa,IAEfoI,KAAM,CACJK,SAAU,KAwCZvI,aAVoB,SAAAjC,GAAK,MAAK,CAC9BE,KAAMF,EAAMkC,YAAYhC,SAGD,SAAApB,GAAQ,MAAK,CACpCoL,OAAO,kBAAKpL,EAASD,UAGVyC,CAMX2I,ICjEEQ,G,4MACFpG,kBAAoB,WACZtF,aAAa2L,UACb,EAAK5K,MAAM6K,QAAQC,KAAK,W,uDAK5B,OACI,qCACA,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,W,GAZWvJ,aA0BRY,gBAJY,SAAAnD,GAAQ,MAAK,CACpCoL,OAAO,kBAAKpL,EAASD,SAGVoD,CAA4BwI,IC3BrCI,I,wDAEF,aAAc,IAAD,8BACT,gBAYJxL,aAAe,SAACC,GAAM,IAAD,EACjB,EAAKC,UAAL,mBACKD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOpD,OAD7B,uBAEW,IAFX,yBAGY,GAHZ,KAdS,EAmCbsD,aAnCa,uCAmCE,WAAOJ,GAAP,uBAAA+D,EAAA,yDACX/D,EAAEK,iBADS,EAGmC,EAAKK,MAA5CP,EAHI,EAGJA,KAAKuH,EAHD,EAGCA,MAAM8D,EAHP,EAGOA,SAASC,EAHhB,EAGgBA,gBAExBD,IAAaC,EALL,sBAMa,0BAChB,EAAKxL,SAAS,CACVuL,SAAS,GACTC,gBAAgB,GAChBC,OAAO,CAACC,QAJI,6BANb,0BAcX,EAAKnL,MAAMoL,WAAW,CAACzL,OAAKuH,QAAM8D,aAdvB,2CAnCF,sDAET,EAAK9K,MAAQ,CACTP,KAAK,GACLuH,MAAM,GACN8D,SAAS,GACTC,gBAAgB,GAChBC,OAAO,GACPG,YAAW,EACXC,SAAQ,GATH,E,sEAqBaC,GAMtB,GALGA,EAAUC,MAAMF,SACfjL,KAAKZ,SAAS,CACV6L,SAAQ,IAGbC,EAAUC,MAAM,CACf,IAAML,EAAUI,EAAUC,MAAMA,MAChCnL,KAAKZ,SAAS,CACVyL,OAAO,CAACC,gB,+BAsBX,IAAD,EAEiE9K,KAAKH,MAAnEgL,EAFH,EAEGA,OAAOvL,EAFV,EAEUA,KAAKuH,EAFf,EAEeA,MAAM8D,EAFrB,EAEqBA,SAASC,EAF9B,EAE8BA,gBAAgBK,EAF9C,EAE8CA,QAAQ1C,EAFtD,EAEsDA,QAE1D,OACI,qBAAK6C,MAAM,YAAX,SACI,yBAAS3C,GAAG,UAAZ,SACI,uBAAMnI,SAAYN,KAAKT,aAAcc,aAAe,MAApD,UACI,sDACCwK,EAAOC,SACJ,mBAAGvF,MAAO,CAAC8F,UAAU,OAAO1J,WAAW,MAAM2J,OAAO,gBAAgBnF,QAAQ,MAAMoF,SAAS,SAA3F,SACEV,EAAOC,UAGZG,GACG,oBAAG1F,MAAO,CAAC8F,UAAU,OAAO1J,WAAW,MAAM2J,OAAO,kBAAkBnF,QAAQ,MAAMoF,SAAS,SAA7F,mDAC2C,cAAC,IAAD,CAAS5F,GAAG,SAAZ,wBAD3C,gBAIJ,8BACI,uBAAOnH,KAAK,OAAOgC,YAAY,OAAOlB,KAAK,OAAOrD,MAAOqD,EAAMuB,SAAUb,KAAKd,aAAcsM,UAAQ,MAExG,8BACI,uBAAOhN,KAAK,QAAQgC,YAAY,QAAQlB,KAAK,QAAQrD,MAAO4K,EAAOhG,SAAUb,KAAKd,aAAcuM,aAAa,MAAMD,UAAQ,MAE/H,8BACI,uBAAOhN,KAAK,WAAWgC,YAAY,WAAWlB,KAAK,WAAWrD,MAAO0O,EAAU9J,SAAUb,KAAKd,aAAcsM,UAAQ,MAExH,8BACI,uBAAOhN,KAAK,WAAWgC,YAAY,mBAAmBlB,KAAK,kBAAkBrD,MAAO2O,EAAiB/J,SAAUb,KAAKd,aAAcsM,UAAQ,MAE9I,gCACI,uBAAOhN,KAAK,SAASvC,MAAM,WAAWyP,SAAUnD,GAAW0C,IAC3D,cAAC,IAAD,CAAStF,GAAG,SAAZ,kC,GAvFDzE,cAyGZY,gBATS,SAAAjC,GAAK,MAAI,CAC7B8L,KAAK9L,EAAMkC,YACXoJ,MAAMtL,EAAM+L,iBAGW,SAAAjN,GAAQ,MAAI,CACnCoM,WAAW,SAAAhL,GAAI,OAAIpB,EbnGK,SAAAoB,GAAI,OAAI,SAACpB,GACjClC,IACKwF,KAAKlF,EAAIG,SAAS6C,GAClBsC,MAAK,SAACC,GACH3D,EAAS,CACLH,KAAMV,EACNW,QAAQ,CACJwM,SAAQ,QAInBY,OAAM,SAACC,GACJnN,EAAS,CACLH,KAAMX,EACNY,QAASqN,EAAIC,SAASxJ,WaqFNyJ,CAAajM,QAG9B+B,CAA4C4I,ICxGrDA,G,kDAEF,aAAc,IAAD,8BACT,gBAQJuB,0BAA4B,SAACf,GAKzB,GAJIA,EAAUS,KAAKO,iBACjB,EAAKvM,MAAM6K,QAAQC,KAAK,KAGtBS,EAAUC,MAAO,CAAC,IACfL,EAAWI,EAAUC,MAArBL,QACL,EAAK1L,SAAS,CACZyL,OAAQ,CAACC,eAjBJ,EAsBb5G,kBAAoB,WACZ,EAAKvE,MAAMgM,KAAKO,iBAClB,EAAKvM,MAAM6K,QAAQC,KAAK,MAxBjB,EA4BbvL,aAAe,SAACC,GAAM,IAAD,EACjB,EAAKC,UAAL,mBACKD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOpD,OAD7B,uBAEW,IAFX,KA7BS,EAmCbsD,aAAe,SAACJ,GACZM,QAAQC,IAAI,aACZP,EAAEK,iBAFgB,MAGO,EAAKK,MACxBE,EAAO,CACT8G,MALc,EAGXA,MAEG8D,SALQ,EAGLA,UAIb,EAAKhL,MAAMwM,OAAOpM,IAxClB,EAAKF,MAAQ,CACTgH,MAAM,GACN8D,SAAS,GACTE,OAAO,IALF,E,qDA6CJ,IAAD,EAC4B7K,KAAKH,MAA9BgL,EADH,EACGA,OAAOhE,EADV,EACUA,MAAM8D,EADhB,EACgBA,SAEpB,OACI,qBAAKS,MAAM,YAAX,SACI,yBAAS3C,GAAG,UAAZ,SACI,uBAAMnI,SAAYN,KAAKT,aAAvB,UACI,uDACCsL,EAAOC,SACJ,mBAAGvF,MAAO,CAAC8F,UAAU,OAAO1J,WAAW,MAAM2J,OAAO,gBAAgBnF,QAAQ,MAAMoF,SAAS,SAA3F,SACEV,EAAOC,UAGb,8BACI,uBAAOtM,KAAK,QAAQgC,YAAY,QAAQlB,KAAK,QAAQrD,MAAO4K,EAAOhG,SAAUb,KAAKd,iBAEtF,8BACI,uBAAOV,KAAK,WAAWgC,YAAY,WAAWlB,KAAK,WAAWrD,MAAO0O,EAAU9J,SAAUb,KAAKd,iBAElG,gCACI,uBAAOV,KAAK,SAASvC,MAAM,WAC3B,cAAC,IAAD,CAAS0J,GAAG,YAAZ,oC,GApEDzE,aAsFZY,gBATS,SAAAjC,GAAK,MAAI,CAC7B8L,KAAK9L,EAAMkC,YACXoJ,MAAMtL,EAAM+L,iBAGW,SAAAjN,GAAQ,MAAI,CACnCwN,OAAQ,SAAApM,GAAI,OAAIpB,Ed9DK,SAAAoB,GAAI,OAAI,SAACpB,GAC9BlC,IACKwF,KAAKlF,EAAIE,MAAM8C,GACfsC,MAAK,SAACC,GAAS,IACL9F,EAAS8F,EAAIC,KAAb/F,MACPoC,aAAawN,QAAQ,WAAW5P,GAChCD,EAAaC,GACb,IAAM+B,EAAU8N,YAAU7P,GAC1BmC,EAASL,EAAeC,OAE3BsN,OAAM,SAACC,GACJnN,EAAS,CACLH,KAAKX,EACLY,QAAQqN,EAAIC,SAASxJ,WciDR+J,CAAUvM,QAGxB+B,CAA4C4I,I,UCpD5C6B,I,mNArCX1M,MAAQ,CACNP,KAAM,I,uDAGC,IAAD,OACGS,EAAQC,KAAKL,MAAbI,KACDyM,EAAG,+BAA2BzM,EAAK8G,OACzC,OACQ,sBAAKuE,MAAM,SAAX,UACQ,sBAAKA,MAAM,UAAX,UACI,qBAAKA,MAAM,QAAX,SACI,qBAAKhE,IAAKoF,EAAK3K,MAAM,KAAK4K,OAAO,KAAKnD,IAAI,UAE9C,qBAAK8B,MAAM,OAAX,SAAmBrL,EAAKT,OACxB,sBAAK8L,MAAM,UAAX,UACA,cAAC,IAAD,CAAMzF,GAAE,mBAAc5F,EAAK4G,KAA3B,SACI,wBAAQyE,MAAM,MAAd,oBAEA,wBAAQA,MAAM,MAAMrG,QAAW,kBAAM,EAAKpF,MAAM0D,WAAW,EAAK1D,MAAM+M,WAAW3M,EAAK4G,MAAtF,0BAIR,sBAAKyE,MAAM,QAAX,UACI,sBAAKA,MAAM,MAAX,UACI,sBAAMA,MAAM,QAAZ,SAAqBrL,EAAK4M,UAAUtQ,SACpC,sBAAM+O,MAAM,YAAZ,0BAEJ,sBAAKA,MAAM,MAAX,UACI,sBAAMA,MAAM,QAAZ,SAAqBrL,EAAK1C,UAAUhB,SACpC,sBAAM+O,MAAM,YAAZ,oC,GA9BTlK,cC4BV0L,GAAb,kDACI,aAAc,IAAD,8BACT,gBAOJ1I,kBARa,sBAQO,sBAAAhB,EAAA,sEACV,EAAKvD,MAAMkN,cADD,OAEhB,EAAKzN,SAAS,CACVmJ,SAAQ,IAHI,2CANhB,EAAK1I,MAAQ,CACT0I,SAAQ,EACRlL,UAAU,IAJL,EADjB,qDAgBa,IAAD,SACsC2C,KAAKL,MAAxCmN,EADH,EACGA,YAAY7M,EADf,EACeA,QAAQ8B,EADvB,EACuBA,YAC3B,OAAO/B,KAAKH,MAAM0I,QACd,qCACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,qCACA,cAAC,GAAD,IACA,qBAAKrI,UAAW6M,IAAW9M,EAAQ+M,OAAQ/M,EAAQgN,UAAnD,SACI,cAACC,GAAA,EAAD,CAAM/M,WAAS,EAACgN,QAAQ,SAAxB,SACGL,EAAYM,SAAS1G,KACpB,SAAA3G,GACE,OACGA,EAAK4G,MAAQ5E,EAAYhC,KAAKqC,QAAUrC,EAAK4M,UAAU5E,SAAShG,EAAYhC,KAAKqC,QAAW,KAC7F,cAAC8K,GAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,GAAD,CACEhK,WAAc,EAAK1D,MAAM0D,WACzBtD,KAAQA,EACR2M,WAAc3K,EAAYhC,KAAKqC,UAJnBrC,EAAK4G,mBAhC3C,GAAkCzF,aA0DnBC,OACXC,aAxEW,SAAAC,GAAK,MAAK,CACrB4L,SAAU,CACR9G,QAAQ,GAAD,OAA0B,EAArB9E,EAAMC,QAAQC,KAAnB,SAETyL,OAAO,aACLnL,MAAO,QACNR,EAAMiM,YAAYC,GAAG,MAAQ,CAC5B5L,WAAiC,EAArBN,EAAMC,QAAQC,KAC1BK,YAAkC,EAArBP,EAAMC,QAAQC,WAiE/BO,aAZoB,SAAAjC,GAAK,MAAK,CAC9BkC,YAAYlC,EAAMkC,YAClB+K,YAAYjN,EAAMiN,gBAGK,SAAAnO,GAAQ,MAAI,CACnC0E,WAAY,SAACjB,EAAOmB,GAAR,OAAuB5E,EAAS0E,GAAWjB,EAAOmB,KAC9DsJ,YAAc,kBAAMlO,EZ5EG,uCAAM,WAAOA,GAAP,eAAAuE,EAAA,sEACRzG,IAAM0G,IAAIpG,EAAIC,OADN,cACvBoG,EADuB,yBAEtBzE,EAAS,CACZH,KAAKN,EACLO,QAAQ2E,EAAOb,QAJU,2CAAN,4DY+EZpB,CAMXyL,ICvFEY,I,yDACF,aAAc,IAAD,8BACT,gBAQJtJ,kBATa,sBASO,gCAAAhB,EAAA,yDACZtE,aAAa2L,SADD,yCAEL,EAAK5K,MAAM6K,QAAQC,KAAK,WAFnB,SAGQ,EAAK9K,MAAtBsD,EAHS,EAGTA,QAAQwK,EAHC,EAGDA,MAEhBxK,EAAQwK,EAAMC,OAAOjF,IAAIpG,MAAK,SAAAC,GAC1B,EAAKlD,SAAS,CACTuO,SAASrL,EAAI7D,QAAQsB,KACrBwI,SAAQ,OARA,2CATP,EAuBbqF,aAvBa,uCAuBE,WAAOC,GAAP,uBAAA3K,EAAA,2DAC0C,EAAKvD,MAAnDmO,EADI,EACJA,aAAazK,EADT,EACSA,WAAW0K,EADpB,EACoBA,aAAaN,EADjC,EACiCA,OACzCI,EAFQ,gCAGDE,EAAaD,EAAa1L,OAAOqL,EAAMC,OAAOjF,IAH7C,6CAKDpF,EAAWyK,EAAa1L,OAAOqL,EAAMC,OAAOjF,IAL3C,wBAML,EAAK9I,MAAMsD,QAAQwK,EAAMC,OAAOjF,IAAIpG,MAAK,SAAAC,GAC3C,EAAKlD,SAAS,CACVuO,SAASrL,EAAI7D,QAAQsB,UARlB,4CAvBF,wDAmCbiO,cAAgB,WACZ,EAAKrO,MAAM6K,QAAQC,KAAK,gBApCf,EAuCbwD,cAAgB,WACZ,EAAKtO,MAAM6K,QAAQC,KAAK,eAtCxB,EAAK5K,MAAQ,CACTP,KAAM,GACNiJ,SAAQ,EACRoF,SAAS,IALJ,E,qDA2CJ,IAAD,SACuB3N,KAAKH,MAAzB0I,EADH,EACGA,QAAQoF,EADX,EACWA,SADX,EAEyB3N,KAAKL,MAA3BmO,EAFH,EAEGA,aAAaL,EAFhB,EAEgBA,MACdS,EAAYlO,KAAKL,MAAMpC,MAAM4Q,QAAO,SAAAlM,GAAI,OAAIA,EAAKE,WAAasL,EAAMC,OAAOjF,MAAIpM,OACrF,OAAOkM,EACH,qCACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGA,qCACA,cAAC,GAAD,IACA,qBAAMhD,MAAO,CAAC1D,MAAM,OAAO4K,OAAO,QAAlC,SACI,sBAAKrB,MAAM,0CAAX,UACI,sBAAKA,MAAM,uBAAX,UACI,sBAAKA,MAAM,0CAAX,UACI,sBAAKA,MAAM,eAAX,UAA0B,qBAAKhE,IAAG,+BAA0BuG,EAAS9G,OAASyC,IAAI,MAAMzH,MAAM,MAAMuJ,MAAM,+BACxG0C,EAAa1L,SAAWqL,EAAMC,OAAOjF,IAAO,wBAC1C1D,QAAW,kBAAM,EAAK6I,aAAaD,EAAShB,UAAU5E,SAAS+F,EAAa1L,UAC5EgJ,MAAM,wCAAwC7F,MAAO,CAACvE,MAAM,SAFlB,SAGrC2M,EAAShB,UAAU5E,SAAS+F,EAAa1L,QAAQ,WAAW,cAGrE,sBAAKgJ,MAAM,6BAAX,UACI,oBAAIA,MAAM,YAAV,SAAuBuC,EAASrO,OAChC,oBAAG8L,MAAM,aAAT,cAAuB,mBAAGA,MAAM,2BAA8BuC,EAAS9G,eAG/E,oBAAItB,MAAO,CAAC6I,WAAW,QAAQvM,MAAM,MAAMD,YAAY,OACvD,qBAAKwJ,MAAM,yCAAX,SACA,qBAAIA,MAAM,cAAc7F,MAAO,CAACvE,MAAM,SAAtC,UACI,qBAAIoK,MAAM,wBAAV,UACI,oBAAIA,MAAM,2BAAV,SAAsC8C,IAAe,wBAAO9C,MAAM,aAAb,cAA2B,mBAAGA,MAAM,kBAApC,cAEzD,qBAAIA,MAAM,8BAA8BrG,QAAW+I,EAAa1L,SAAWqL,EAAMC,OAAOjF,GAAGzI,KAAKiO,cAAc,KAAM1I,MAAO,CAAC8I,OAAQP,EAAa1L,SAAWqL,EAAMC,OAAOjF,GAAI,UAAU,IAAvL,UACI,oBAAI2C,MAAM,2BAAV,SAAsCuC,EAAShB,UAAUtQ,SAAY,wBAAO+O,MAAM,aAAb,cAA2B,mBAAGA,MAAM,iBAApC,kBAEzE,qBAAIA,MAAM,yBAAyBrG,QAAW+I,EAAa1L,SAAWqL,EAAMC,OAAOjF,GAAGzI,KAAKgO,cAAc,KAAMzI,MAAO,CAAC8I,OAAOP,EAAa1L,SAAWqL,EAAMC,OAAOjF,GAAG,UAAU,IAAhL,UACI,oBAAI2C,MAAM,2BAAV,SAAsCuC,EAAStQ,UAAUhB,SAAY,wBAAO+O,MAAM,aAAb,cAA2B,mBAAGA,MAAM,gBAApC,0BAK/E0C,EAAa1L,SAAWqL,EAAMC,OAAOjF,IAAO,cAAC,GAAD,CAAUD,aAAe,gB,GAvFjEtH,cA4GXY,gBAbS,SAAAjC,GAAK,MAAI,CAC9BiO,aAAajO,EAAMkC,YAAYhC,KAC/BxC,MAAOsC,EAAM8I,YAAYpL,UAGD,SAAAoB,GAAQ,MAAK,CACpCsE,QAAQ,SAAAwF,GAAE,OAAI9J,EAASsE,GAAQwF,KAC/BpF,WAAY,SAACjB,EAAOmB,GAAR,OAAuB5E,EAAS0E,GAAWjB,EAAOmB,KAC9DwK,aAAc,SAAC3L,EAAOwB,GAAR,OAAyBjF,EAASgF,GAAavB,EAAOwB,KACpEG,aAAc,SAAA0E,GAAE,OAAI9J,EAASoF,GAAa0E,KAC1CzE,aAAc,SAAAyE,GAAE,OAAI9J,EAASqF,GAAayE,QAG/B3G,CAA4C0L,I,wCCrD5Cc,G,4MA/BbzO,MAAQ,CACNE,KAAM,I,EAERmE,kBAAoB,WAAM,IAAD,EACA,EAAKvE,MAAnB8I,EADc,EACdA,IACPxF,EAFqB,EACXA,SACFwF,GAAIpG,MAAK,SAACC,GACd,EAAKlD,SAAS,CACVW,KAAKuC,EAAI7D,QAAQsB,W,uDAKnB,IAEDA,EAAQC,KAAKH,MAAbE,KAEP,OACI,cAAC,IAAD,CAAM4F,GAAE,mBAAc5F,EAAK4G,KAAOpB,MAAO,CAACvE,MAAM,WAAhD,SACA,eAACuN,GAAA,EAAD,CAAUhJ,MAAO,CAACiJ,WAAW,kBAAkBxJ,aAAa,OAA5D,UACA,cAACyJ,GAAA,EAAD,UACE,cAAC/J,GAAA,EAAD,CAAQ0C,IAAG,+BAA4BrH,EAAK8G,OAAStB,MAAO,CAACP,aAAa,YAE5E,cAAC0J,GAAA,EAAD,CACEC,QAAS5O,EAAKT,gB,GAxBG4B,aCFrB/D,G,kDACF,aAAc,IAAD,8BACT,gBAOJ+B,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOpD,SAVtB,EAcbsD,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKG,MAAMC,WAAW,EAAKC,MAAMC,SAAS,EAAKH,MAAMI,MACrD,EAAKX,SAAS,CAACU,SAAS,MAjBf,EAoBboE,kBApBa,sBAoBO,sBAAAhB,EAAA,sEACX,EAAKvD,MAAMsD,QAAQ,EAAKtD,MAAMmO,aAAa1L,QAAQC,MAAK,SAAAC,GAC1D,EAAKlD,SAAS,CACVuN,UAAUrK,EAAI7D,QAAQsB,KAAK4M,eAHlB,2CAlBhB,EAAK9M,MAAQ,CACTC,SAAS,GACT6M,UAAU,IAJL,E,qDA4BJ,IACEA,EAAa3M,KAAKH,MAAlB8M,UADH,EAE6B3M,KAAKL,MAA9BM,EAFJ,EAEIA,QAAagD,GAFjB,EAEYlD,KAFZ,EAEiBkD,SACrB,OACI,qCACA,cAAC,GAAD,IACA,eAACiK,GAAA,EAAD,CAAMG,MAAI,EAACuB,GAAI,GAAIC,GAAI,EAAG3O,UAAWD,EAAQ6O,KAA7C,UACA,cAACpH,GAAA,EAAD,CAAY3G,QAAQ,KAAKb,UAAWD,EAAQuE,MAA5C,0BAGA,cAACuK,GAAA,EAAD,CAAMC,OAAO,EAAb,SACMrC,EAAUjG,KAAI,SAAApD,GACZ,OACI,cAAC,GAAD,CACAL,QAAWA,EACXwF,GAAMnF,mB,GA5CPpC,aAiERC,OACXC,aAlFW,SAAAC,GAAK,MAAK,CACrB2I,KAAM,CACFK,SAAU,EACVkB,SAAU,KAEZ0D,KAAM,CACJhJ,gBAAiB5E,EAAM6N,QAAQd,WAAWe,OAE5C3K,MAAO,CACL7D,OAAQU,EAAMC,QAAQ,EAAG,EAAG,IAE9BwN,KAAK,CACHnN,WAAW,WAuEfG,aAZoB,SAAAjC,GAAK,MAAI,CAC7BiO,aAAajO,EAAMkC,YAAYhC,KAC/BA,KAAKF,EAAMiN,gBAGY,SAAAnO,GAAQ,MAAI,CACnCsE,QAAS,SAAAwF,GAAE,OAAI9J,EAASsE,GAAQwF,KAChC1E,aAAa,SAAA0E,GAAE,OAAI9J,EAASoF,GAAa0E,SAG9BtH,CAGbhE,I,UCvBaiS,G,4MAzCbvP,MAAQ,CACNE,KAAM,I,EAERmE,kBAAoB,WAAM,IAAD,EACA,EAAKvE,MAAnB8I,EADc,EACdA,IACPxF,EAFqB,EACXA,SACFwF,GAAIpG,MAAK,SAACC,GACd,EAAKlD,SAAS,CACVW,KAAKuC,EAAI7D,QAAQsB,W,EAK7BsP,S,sBAAW,kCAAAnM,EAAA,+DACkC,EAAKvD,MAAvC8I,EADA,EACAA,GAAG6G,EADH,EACGA,eAAeC,EADlB,EACkBA,aADlB,SAEDA,EAAaD,EAAe7G,GAF3B,OAGP,EAAK9I,MAAM6P,SAHJ,2C,uDAMD,IAEDzP,EAAQC,KAAKH,MAAbE,KAEP,OAEI,eAACwO,GAAA,EAAD,CAAUhJ,MAAO,CAACiJ,WAAW,kBAAkBxJ,aAAa,OAA5D,UACI,eAAC,IAAD,CAAMW,GAAE,mBAAc5F,EAAK4G,KAAOpB,MAAO,CAACvE,MAAM,UAAUQ,QAAQ,QAAlE,UACI,cAACiN,GAAA,EAAD,UACI,cAAC/J,GAAA,EAAD,CAAQ0C,IAAG,+BAA4BrH,EAAK8G,OAAStB,MAAO,CAACP,aAAa,YAE9E,cAAC0J,GAAA,EAAD,CAAcC,QAAS5O,EAAKT,UAEhC,cAACmQ,GAAA,EAAD,UACA,cAAC3O,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAU+D,QAAW/E,KAAKqP,SAA3D,+B,GAjCgBnO,aCHtBwO,G,kDACF,aAAc,IAAD,8BACT,gBAOJxQ,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOpD,SAVtB,EAcbsD,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKG,MAAMC,WAAW,EAAKC,MAAMC,SAAS,EAAKH,MAAMI,MACrD,EAAKX,SAAS,CAACU,SAAS,MAjBf,EAoBboE,kBApBa,sBAoBO,sBAAAhB,EAAA,sEACX,EAAKvD,MAAMsD,QAAQ,EAAKtD,MAAMmO,aAAa1L,QAAQC,MAAK,SAAAC,GAC1D,EAAKlD,SAAS,CACVuQ,WAAWrN,EAAI7D,QAAQsB,KAAK1C,eAHnB,2CAlBhB,EAAKwC,MAAQ,CACTC,SAAS,GACT6P,WAAW,IAJN,E,qDA4BJ,IAAD,OACGA,EAAc3P,KAAKH,MAAnB8P,WADH,EAEqC3P,KAAKL,MAAtCM,EAFJ,EAEIA,QAAQgD,EAFZ,EAEYA,QAASsM,EAFrB,EAEqBA,aACzB,OACI,qCACA,cAAC,GAAD,IACA,eAACrC,GAAA,EAAD,CAAMG,MAAI,EAACuB,GAAI,GAAIC,GAAI,EAAG3O,UAAWD,EAAQ6O,KAA7C,UACA,cAACpH,GAAA,EAAD,CAAY3G,QAAQ,KAAKb,UAAWD,EAAQuE,MAA5C,2BAGA,cAACuK,GAAA,EAAD,CAAMC,OAAO,EAAb,SACMW,EAAWjJ,KAAI,SAAAkJ,GACb,OACI,cAAC,GAAD,CACAnH,GAAMmH,EACN3M,QAAWA,EACXqM,eAAkB,EAAK3P,MAAMmO,aAAa1L,OAC1CmN,aAAgBA,EAChBC,OAAU,EAAKtL,mC,GA/CdhD,aAqEVC,OACXC,aAtFW,SAAAC,GAAK,MAAK,CACrB2I,KAAM,CACFK,SAAU,EACVkB,SAAU,KAEZ0D,KAAM,CACJhJ,gBAAiB5E,EAAM6N,QAAQd,WAAWe,OAE5C3K,MAAO,CACL7D,OAAQU,EAAMC,QAAQ,EAAG,EAAG,IAE9BwN,KAAK,CACHnN,WAAW,WA2EfG,aAboB,SAAAjC,GAAK,MAAI,CAC7BiO,aAAajO,EAAMkC,YAAYhC,KAC/BA,KAAKF,EAAMiN,gBAGY,SAAAnO,GAAQ,MAAI,CACnCsE,QAAS,SAAAwF,GAAE,OAAI9J,EAASsE,GAAQwF,KAChC1E,aAAa,SAAA0E,GAAE,OAAI9J,EAASoF,GAAa0E,KACzC8G,aAAc,SAACnN,EAAOwB,GAAR,OAAyBjF,EAASgF,GAAavB,EAAOwB,SAGzDzC,CAGbuO,ICzFFG,wBAAc,kBACd,IAAMrF,GAAUsF,cAeVC,GAAMC,YAAWC,KAbV,kBACT,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,UAAW9F,KAClC,cAAC,IAAD,CAAO6F,KAAM,YAAYC,UAAW1F,KACpC,cAAC,IAAD,CAAOyF,KAAM,SAASC,UAAWC,KACjC,cAAC,IAAD,CAAOF,KAAM,YAAYC,UAAWE,KACpC,cAAC,IAAD,CAAOH,KAAM,eAAeC,UAAW5C,KACvC,cAAC,IAAD,CAAO2C,KAAM,aAAaC,UAAWzD,KACrC,cAAC,IAAD,CAAOwD,KAAM,cAAcC,UAAWV,KACtC,cAAC,IAAD,CAAOU,UAAW9F,YAYXiG,GANO,kBAClB,cAAC,IAAD,CAAYC,SAAUC,GAAwBjG,QAASA,GAAvD,SACI,cAAC,GAAD,OC3BOuF,GAFH,kBAAM,cAAC,GAAD,KCMZW,GAAcjH,QACW,cAA7B3K,OAAOC,SAAS4R,UAEkB,UAA7B7R,OAAOC,SAAS4R,UAEhB7R,OAAOC,SAAS4R,SAASlD,MAC1B,2DAwCN,SAASmD,GAAgBC,GACvBC,UAAUC,cACP7T,SAAS2T,GACTxO,MAAK,SAAC2O,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrR,QACfiR,UAAUC,cAAcM,WAK1B5R,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBmM,OAAM,SAACV,GACN1L,QAAQ0L,MAAM,4CAA6CA,M,sDC9E3DmG,GAAe,CACjBpF,iBAAgB,EAChBnM,KAAK,ICHHuR,GAAe,G,SCMbC,GAAY,CACdhU,MAAQ,ICANgU,GAAY,CACdnE,SAAW,GACXT,UAAU,GACVtP,UAAU,GACVmU,SAAS,ICNAC,8BAAgB,CAC7B1P,YJAa,WAAsC,IAA7BlC,EAA4B,uDAApByR,GAAajK,EAAO,uCAChD,OAAOA,EAAO7I,MACV,KAAKT,EACD,oCACO8B,GADP,IAEIqM,iBAAkBwF,KAAOrK,EAAO5I,SAChCsB,KAAKsH,EAAO5I,UAEhB,QACI,OAAOoB,IIRrB+L,aHLa,WAAqC,IAA3B/L,EAA0B,uDAApByR,GAAajK,EAAO,uCAC/C,OAAGA,EAAO7I,OAASV,GAAiBuJ,EAAO7I,OAASX,EACzCwJ,EAAO5I,QACXoB,GGGT8I,YFEe,WAAiC,IAAxB9I,EAAuB,uDAAjB0R,GAAUlK,EAAO,uCAC3C,OAAOA,EAAO7I,MACZ,KAAKd,EACD,OAAO,6BACFmC,GADL,IAEEtC,MAAO8J,EAAO5I,UAEpB,KAAKjB,EACD,OAAO,6BACAqC,GADP,IAEItC,MAAM,CACF,CACIoJ,IAAIU,EAAO5I,QAAQkI,IACnBzE,OAAOmF,EAAO5I,QAAQyD,OACtBC,SAASkF,EAAO5I,QAAQ0D,SACxBqE,SAAS,GACTsB,OAAOT,EAAO5I,QAAQqJ,OACtBE,WAAWX,EAAO5I,QAAQuJ,WAC1BhG,KAAKqF,EAAO5I,QAAQuD,KACpB4D,UAAUyB,EAAO5I,QAAQmH,YAT5B,oBAWE/F,EAAMtC,UAGrB,KAAKE,EACD,OAAO,6BACAoC,GADP,IAEItC,MAAOsC,EAAMtC,MAAM4Q,QAAO,qBAAGxH,MAAkBU,EAAOoB,QAE9D,KAAK9K,EACD,OAAO,6BACAkC,GADP,IAEItC,MAAMsC,EAAMtC,MAAMmJ,KAAI,SAACzE,GACnB,OAAGA,EAAK0E,MAAQU,EAAO5I,QAAQkI,IAC3B,6BACO1E,GADP,IAEI6F,OAAOT,EAAO5I,QAAQqJ,OACtBE,WAAWX,EAAO5I,QAAQuJ,aAG3B/F,OAGnB,KAAKrE,EACD,OAAO,6BACAiC,GADP,IAEItC,MAAMsC,EAAMtC,MAAMmJ,KAAI,SAACzE,GACnB,OAAGA,EAAK0E,KAAOU,EAAO5I,QAAQkI,IACnB,6BACA1E,GADP,IAEIuE,SAAS,GAAD,oBACDvE,EAAKuE,UADJ,CAEJ,CACIG,IAAIU,EAAO5I,QAAQ+H,SAASa,EAAO5I,QAAQ+H,SAASnK,OAAS,GAAGsK,IAChExC,YAAakD,EAAOlD,YACpBnC,KAAMqF,EAAOrF,UAItBC,OAGnB,QACI,OAAOpC,IEhEjBiN,YDKe,WAAiC,IAAxBjN,EAAuB,uDAAjB0R,GAAUlK,EAAO,uCAC3C,OAAOA,EAAO7I,MACV,KAAKR,EACD,OAAO,6BACA6B,GADP,IAEI8M,UAAUtF,EAAO5I,QAAQsB,KAAK4M,YAEtC,KAAK1O,EACD,oCACO4B,GADP,IAEIxC,UAAUgK,EAAO5I,QAAQsB,KAAK1C,YAEtC,KAAKc,EACD,OAAO,6BACA0B,GADP,IAEI2R,SAASnK,EAAO5I,UAExB,KAAKP,EACD,OAAO,6BACA2B,GADP,IAEIuN,SAAS/F,EAAO5I,UAExB,KAAKL,EACD,OAAO,6BACAyB,GADP,IAEIuN,SAASvN,EAAMuN,SAAS1G,KAAI,SAAA3G,GAAI,OAC1BA,EAAK4G,MAAQU,EAAO5I,QAAQkI,IAA5B,6BAAoC5G,GAApC,IAAyC4M,UAAUtF,EAAO5I,QAAQkO,YAAW5M,OAI3F,KAAK1B,EACC,OAAO,6BACAwB,GADP,IAEIxC,UAAWgK,EAAO5I,QAAQpB,YAEpC,QACM,OAAOwC,MExCjB8R,GCNJC,uBAAYC,GAAaC,+BAAoBC,2BAAgBC,QDQ/D,GAAGpT,aAAa2L,SAAU,CACxBhO,EAAaqC,aAAa2L,UAC1B,IAAMhM,GAAU8N,YAAUzN,aAAa2L,UACvCoH,GAAMhT,SAASL,EAAeC,KAE9B,IAAM0T,GAAYC,KAAKC,MAAM,IAC1B5T,GAAQ6T,IAAMH,KACfN,GAAMhT,SAASD,KACfI,OAAOC,SAASC,KAAO,UAI3BqT,IAASC,OACP,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFY,SAASC,eAAe,SNTX,WACb,GAA6C,kBAAmB1B,UAAW,CAGzE,GADkB,IAAI2B,IAAIhC,GAAwB3R,OAAOC,UAC3C2T,SAAW5T,OAAOC,SAAS2T,OAIvC,OAGF5T,OAAO6T,iBAAiB,QAAQ,WAC9B,IAAM9B,EAAK,UAAMJ,GAAN,sBAEPC,KAmDV,SAAiCG,GAE/B+B,MAAM/B,GACHxO,MAAK,SAAC0J,GAGiB,MAApBA,EAAS8G,SAC0D,IAAhE9G,EAASpP,QAAQwG,IAAI,gBAAgB2P,QAAQ,cAGhDhC,UAAUC,cAAcgC,MAAM1Q,MAAK,SAAC2O,GAClCA,EAAagC,aAAa3Q,MAAK,WAC7BvD,OAAOC,SAASyQ,eAKpBoB,GAAgBC,MAGnBhF,OAAM,WACLpM,QAAQC,IACN,oEAvEAuT,CAAwBpC,GAIxBC,UAAUC,cAAcgC,MAAM1Q,MAAK,WACjC5C,QAAQC,IACN,gHAMJkR,GAAgBC,OMhBxBqC,I","file":"static/js/main.0ba1f02a.chunk.js","sourcesContent":["const isNull = value =>\r\n  value === undefined\r\n  || value === null\r\n  || (typeof value === 'object' && Object.keys(value).length === 0)\r\n  || (typeof value === 'string' && value.trim().length === 0);\r\n\r\nmodule.exports = isNull;","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common.Authorization = token;\r\n  } else {\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","const BASE_URL = \"https://my-network-api.herokuapp.com/\";\r\n\r\nconst api = {\r\n    users:BASE_URL+'users',\r\n    login:BASE_URL+'users/login',\r\n    register:BASE_URL+'users/register',\r\n    follower:BASE_URL+'users/follower',\r\n    unfollower:BASE_URL+'users/unfollower',\r\n    following:BASE_URL+'users/following',\r\n    unfollowing:BASE_URL+'users/unfollowing',\r\n    posts:BASE_URL+'posts'\r\n}\r\n\r\nexport default api;","export const CREATE_POST = 'CREATE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const GET_POST = 'GET_POST';\r\nexport const UPDATE_POST_LIKES = 'UPDATE_POST_LIKES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const IND_NO_ERRORS = 'IND_NO_ERRORS';\r\nexport const SET_CURR_USER = 'SET_CURR_USER';\r\nexport const UPDATE_CURR_USER = 'UPDATE_CURR_USER';\r\n\r\nexport const GET_FOLLOWERS = 'GET_FOLLOWERS';\r\nexport const GET_FOLLOWING = 'GET_FOLLOLWING';\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const UPDATE_FOLLOWERS = 'UPDATE_FOLLOWERS';\r\nexport const UPDATE_FOLLOWING = 'UPDATE_FOLLOWING';","import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport setAuthToken from '../setAuthToken';\r\nimport api from '../api';\r\nimport {\r\n    IND_NO_ERRORS,\r\n    GET_ERRORS,\r\n    SET_CURR_USER\r\n} from './actionType';\r\n\r\nexport const registerUser = user => (dispatch) =>{\r\n    axios\r\n        .post(api.register,user)\r\n        .then((res) =>{\r\n            dispatch({\r\n                type: IND_NO_ERRORS,\r\n                payload:{\r\n                    success:true\r\n                }\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        })\r\n};\r\n\r\nexport const loginUser = user => (dispatch) =>{\r\n    axios   \r\n        .post(api.login,user)\r\n        .then((res) => {\r\n            const {token} = res.data;\r\n            localStorage.setItem('jwtToken',token);\r\n            setAuthToken(token)\r\n            const decoded = jwtDecode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            });\r\n        });\r\n};\r\n\r\nexport const setCurrentUser = decoded => ({\r\n    type:SET_CURR_USER,\r\n    payload:decoded,\r\n});\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n    window.location.href = '/login';\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createPost } from '../actions/postAction';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n      margin: theme.spacing.unit\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      marginTop: '16px'\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 500\r\n    }\r\n  });\r\n\r\nclass CreatePost extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            postText:'',\r\n        };\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(\"posted\");\r\n        this.props.createpost(this.state.postText,this.props.user);\r\n        this.setState({postText:''})\r\n    }\r\n\r\n    render(){\r\n        const {postText} = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n    <form\r\n        className={classes.container}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <TextField\r\n          name=\"postText\"\r\n          placeholder=\"What's on your mind?\"\r\n          multiline\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          rowsMax=\"5\"\r\n          value={postText}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          type=\"submit\"\r\n        >\r\n          Post\r\n        </Button>\r\n      </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user:state.authReducer.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    createpost:(text,user) =>dispatch(createPost(text,user))\r\n})\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(CreatePost);\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    GET_POST,\r\n    UPDATE_POST_LIKES,\r\n    ADD_COMMENT,\r\n} from './actionType';\r\nimport api from '../api';\r\n\r\n\r\nexport const getPosts = () => dispatch =>\r\n  axios.get(api.posts).then(res =>\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    }));\r\n\r\nexport const createPost = (text,user) => dispatch =>{\r\n    axios   \r\n        .post(api.posts,{\r\n            text,\r\n            author:user.name,\r\n            authorId:user.userId,\r\n        })\r\n        .then(res => \r\n         dispatch({\r\n             type:CREATE_POST,\r\n             payload:res.data\r\n         })   \r\n        );\r\n};\r\n\r\nexport const updatePostLikes = (action, postId, likerId) => dispatch =>\r\n  axios.patch(`${api.posts}/${postId}`, { action, id: likerId }).then(res =>\r\n    dispatch({\r\n      type: UPDATE_POST_LIKES,\r\n      payload: res.data\r\n    }));\r\n\r\nexport const deletePost = id => dispatch =>\r\n  axios.delete(`${api.posts}/${id}`).then(res =>\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      id\r\n}));\r\n\r\nexport const addComment = (commenterId,postId,text) => dispatch =>\r\n      axios.patch(`${api.posts}/${postId}`,{action:\"addComment\" ,commenterId,text})\r\n      .then(res =>\r\n          dispatch({\r\n            type:ADD_COMMENT,\r\n            payload:res.data,\r\n            commenterId,\r\n            text\r\n      }));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  progress: {\r\n    left: '50%',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translate(-50%,-50%)'\r\n  }\r\n};\r\n\r\nconst Loading = ({ classes }) => (\r\n  <div className={classes.progress}>\r\n    <CircularProgress className={classes.l} size={50} />\r\n  </div>\r\n);\r\n\r\n\r\nexport default withStyles(styles)(Loading);\r\n","import axios from 'axios';\r\nimport {\r\n  GET_FOLLOWERS,\r\n  GET_FOLLOWING,\r\n  GET_USER,\r\n  GET_ALL_USERS,\r\n  UPDATE_FOLLOWERS,\r\n  UPDATE_FOLLOWING\r\n} from './actionType';\r\nimport api from '../api';\r\n\r\nexport const getAllUsers = () => async (dispatch) =>{\r\n    const result = await axios.get(api.users);\r\n    return dispatch({\r\n        type:GET_ALL_USERS,\r\n        payload:result.data\r\n    });\r\n};\r\n\r\nexport const getUser = (userId) => async (dispatch) =>{\r\n    try{\r\n        const result = await axios.get(`${api.users}/${userId}`);\r\n        return dispatch({\r\n            type: GET_USER,\r\n            payload: result.data\r\n        });\r\n    }catch(err){\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const followUser = (followerId,idToFollow) => async (dispatch) =>{\r\n    const followRes = await axios.patch(`${api.following}/${followerId}`,{idToFollow});\r\n    const addFollowRes = await axios.patch(`${api.follower}/${idToFollow}`,{followerId});\r\n    dispatch({\r\n        type:UPDATE_FOLLOWERS,\r\n        payload:addFollowRes.data,\r\n    });\r\n    return dispatch({\r\n        type:UPDATE_FOLLOWING,\r\n        payload:followRes.data\r\n    });\r\n};\r\n\r\nexport const unfollowUser = (followerId,idToUnfollow) => async (dispatch) =>{\r\n    const unfollowRes = await axios.patch(`${api.unfollowing}/${followerId}`,{idToUnfollow});\r\n    const removeFollowRes = await axios.patch(`${api.unfollower}/${idToUnfollow}`,{followerId});\r\n    dispatch({\r\n        type:UPDATE_FOLLOWERS,\r\n        payload:removeFollowRes.data,\r\n    });\r\n    return dispatch({\r\n        type:UPDATE_FOLLOWING,\r\n        payload:unfollowRes.data\r\n    });\r\n};\r\n\r\nexport const getFollowers = userId => async (dispatch) => {\r\n    const result = await axios.get(`${api.users}/${userId}`);\r\n    return dispatch({\r\n      type: GET_FOLLOWERS,\r\n      payload: result.data\r\n    });\r\n  };\r\n  \r\n  export const getFollowing = userId => async (dispatch) => {\r\n    const result = await axios.get(`${api.users}/${userId}`);\r\n    return dispatch({\r\n      type: GET_FOLLOWING,\r\n      payload: result.data\r\n    });\r\n  };","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n      marginBottom: theme.spacing.unit,\r\n      marginLeft: theme.spacing.unit\r\n    },\r\n    cardHeader: {\r\n      paddingTop: theme.spacing.unit,\r\n      paddingBottom: theme.spacing.unit\r\n    },\r\n    cardHeaderTitle: {\r\n      display: 'flex'\r\n    },\r\n    commentField: {\r\n      width: '90%',\r\n      marginLeft: theme.spacing.unit,\r\n      marginTop: theme.spacing.unit\r\n    }\r\n  });\r\n\r\nclass CommentInput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            text:'',\r\n            name:''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { commenterId, getUser } = this.props;\r\n        getUser(commenterId).then((res) => {\r\n          this.setState({\r\n            name: res.payload.user.name\r\n          });\r\n        });\r\n      };\r\n\r\n    postComment = (e) =>{\r\n        e.preventDefault();\r\n        if(this.state.text.trim() === '')\r\n            return;\r\n        this.props.addComment(this.props.commenterId,this.props.postId,this.state.text);\r\n        this.setState({\r\n            text:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props;\r\n        return (\r\n            <CardHeader className={classes.CardHeader}\r\n            title = {\r\n                <div className={classes.cardHeaderTitle}>\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                          {this.state.name.charAt(0)}\r\n                    </Avatar>\r\n                    <TextField\r\n                        multiline\r\n                        placeholder=\"Write a comment\"\r\n                        className={classes.commentField}\r\n                        onChange={this.handleChange}\r\n                        name=\"text\"\r\n                        value={this.state.text}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={this.postComment}\r\n                        >\r\n                    <SendIcon />\r\n                    </Button>\r\n                </div>\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CommentInput);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as moment from 'moment';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst styles = theme => ({\r\n    cardHeader: {\r\n      paddingTop: theme.spacing.unit,\r\n      paddingBottom: theme.spacing.unit\r\n    },\r\n    commentContent: {\r\n      backgroundColor: '#CFD8DC',\r\n      borderRadius: '10px',\r\n      padding: theme.spacing.unit\r\n    },\r\n    commentText: {\r\n      fontWeight: '400'\r\n    },\r\n    commenter: {\r\n      fontWeight: '800'\r\n    },\r\n    link: {\r\n      color: '#000',\r\n      textDecoration: 'none'\r\n    },\r\n    timestamp: {\r\n      fontSize:\"11px\"\r\n    }\r\n  });\r\n  \r\n\r\nclass CommentBody extends Component {\r\n    state = {\r\n      name: ''\r\n    };\r\n  \r\n    componentDidMount = () => {\r\n      const { comment, getUser } = this.props;\r\n      getUser(comment.commenterId).then((res) => {\r\n        this.setState({\r\n          name: res.payload.user.name\r\n        });\r\n      });\r\n    };\r\n\r\n    render(){\r\n        const {classes,comment} = this.props;\r\n        const {name} = this.state;\r\n        return (\r\n            <CardHeader \r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                  {name.charAt(0)}\r\n                </Avatar>\r\n              }\r\n            title = {\r\n                <div className={classes.commentContent}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                         <div style={{ flexDirection: 'column' }}>\r\n                            <div className={classes.commenter}>\r\n                                <Link className={classes.link} to={`/login`}>\r\n                                    {name}\r\n                                </Link>\r\n                             </div>\r\n                        <div className={classes.timestamp} >\r\n                          {moment(comment.createdAt).fromNow()}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.commentText}>{comment.text}</div>\r\n              </div>\r\n            }\r\n           />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CommentBody);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport CommentInput from './commentInput';\r\nimport CommentBody from './commentBody';\r\n\r\nclass Comments extends Component {\r\n    render(){\r\n        const {addComment,commenterId,comments,postId,getUser,UserId} = this.props;\r\n        return (\r\n            <div>\r\n            <hr />\r\n            {!!comments.length && comments.map(comment =>(\r\n                <CommentBody \r\n                key = {comment._id}\r\n                comment = {comment}\r\n                getUser = {getUser}\r\n                />\r\n            ))}\r\n            <CommentInput\r\n                addComment = {addComment}\r\n                commenterId = {commenterId}\r\n                postId = {postId}\r\n                getUser = {getUser}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as moment from 'moment';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LikeIcon from '@material-ui/icons/ThumbUp';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Comments from './comments';\r\n\r\nconst styles = theme => ({\r\n    actions:{\r\n        display:'flex'\r\n    },\r\n    card:{\r\n        margin:'20px auto',\r\n        width:\"70%\",\r\n    },\r\n    link: {\r\n        color: '#000',\r\n        textDecoration: 'none'\r\n      },\r\n})\r\n\r\nclass Post extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email:'',\r\n            openComments:false\r\n        }\r\n    };\r\n\r\n    componentDidMount = async() =>{\r\n        const {post,getUser} = this.props;\r\n           await getUser(post.authorId).then((res) => {\r\n                if(res){\r\n                    console.log(\"cr\",res);\r\n                    this.setState({\r\n                        email:res.payload.user.email\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    handleOpenComment = () =>{\r\n        this.setState({\r\n            openComments:!this.state.openComments\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {classes,post,userId,updatePostLikes,getUser,addComment} = this.props;\r\n        const relativeTime = moment(post.createdAt).fromNow();\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://robohash.org/${this.state.email}`} />\r\n                      }\r\n                      action={\r\n                         post.authorId === userId ? \r\n                        (<IconButton aria-label=\"settings\">\r\n                          <DeleteIcon color=\"secondary\" onClick = {() => this.props.deletePost(post._id)}/>\r\n                        </IconButton>):null\r\n                      }\r\n                    title={\r\n                    <Link className={classes.link} to={'/login'}>\r\n                        {post.author}\r\n                    </Link>\r\n                    }\r\n                    subheader={relativeTime}\r\n                />\r\n                <CardContent>\r\n                    <Typography>{post.text}</Typography>\r\n                </CardContent>\r\n                <CardActions className = {classes.actions} disableActionSpacing>\r\n                    <div>\r\n                        <IconButton aria-label='Like'\r\n                        onClick = {() => post.likers.includes(userId)?updatePostLikes('unlike',post._id,userId)\r\n                        : updatePostLikes('like',post._id,userId)}\r\n                        >\r\n                            <LikeIcon \r\n                            style={\r\n                                post.likers.includes(userId) ? { color: '#3f51b5' } : null\r\n                              }\r\n                            />\r\n                        </IconButton>\r\n                        {post.likesCount}\r\n                    </div>\r\n                    <div style={{ marginLeft: '20px' }}>\r\n                        <IconButton onClick = {this.handleOpenComment}>\r\n                            <CommentIcon />\r\n                        </IconButton>\r\n                        {post.comments.length}\r\n                    </div>\r\n                </CardActions>\r\n                <Collapse in={this.state.openComments} timeout=\"auto\" unmountOnExit>\r\n                    <Comments\r\n                        comments = {post.comments}\r\n                        postId = {post._id}\r\n                        commenterId = {userId}\r\n                        addComment = {addComment}\r\n                        getUser = {getUser}\r\n                    />\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Post);","import React ,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  deletePost,\r\n  getPosts,\r\n  updatePostLikes,\r\n  addComment\r\n} from '../actions/postAction';\r\nimport classnames from 'classnames';\r\nimport * as moment from 'moment';\r\nimport Loading from './loading';\r\nimport { getFollowing, getUser } from '../actions/userAction';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nimport Post from './post';\r\n\r\nclass PostFeed extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            posts:[],\r\n            loading:true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async() =>{\r\n        const {getPosts,getFollowing,user} = this.props;\r\n        if(user){\r\n        await getPosts().then(() => {\r\n            getFollowing(user.userId).then((res) =>{\r\n                const following = (res.payload && res.payload.user)?res.payload.user.following:[];\r\n                this.setState({following,loading:false})\r\n            })  \r\n        });}\r\n    }\r\n\r\n    render(){\r\n        const{loading,following} = this.state;\r\n        const {user,getUser, updatePostLikes,addComment,deletePost} = this.props;\r\n        return loading?(\r\n            <Loading />\r\n        ) :(\r\n        <>\r\n            {this.props.posts.map(post =>{\r\n                return (!this.props.showMyPosts && following.includes(post.authorId)) || (post.authorId === user.userId)?(\r\n                        <Post \r\n                            post = {post}\r\n                            userId = {user.userId}\r\n                            getUser={id => getUser(id)}\r\n                            updatePostLikes={(action, postId, likerId) =>\r\n                                updatePostLikes(action, postId, likerId)\r\n                            }\r\n                            addComment = {addComment}\r\n                            deletePost = {deletePost}\r\n                            />\r\n                ):null\r\n                \r\n            })}\r\n        </>\r\n        );  \r\n    }\r\n}\r\n\r\nPostFeed.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        _id: PropTypes.string.isRequired,\r\n        authorId: PropTypes.string.isRequired,\r\n        comments: PropTypes.array,\r\n        likers: PropTypes.array.isRequired,\r\n        likesCount: PropTypes.number.isRequired,\r\n        text: PropTypes.string.isRequired\r\n      })\r\n    ),\r\n    updatePostLikes: PropTypes.func.isRequired,\r\n    getFollowing: PropTypes.func.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    user: PropTypes.shape({\r\n      userId: PropTypes.string.isRequired\r\n    }).isRequired\r\n  };\r\n\r\nconst mapStateToProps = state =>({\r\n    user:state.authReducer.user,\r\n    posts:state.postReducer.posts\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deletePost: id => dispatch(deletePost(id)),\r\n    getPosts: () => dispatch(getPosts()),\r\n    getUser: id => dispatch(getUser(id)),\r\n    getFollowing : id => dispatch(getFollowing(id)),\r\n    updatePostLikes: (action, postId, likerId) =>dispatch(updatePostLikes(action, postId, likerId)),\r\n    addComment: (commenterId,postId,text) => dispatch(addComment(commenterId,postId,text))\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PostFeed);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = {\r\n  link: {\r\n    outline: 'none',\r\n    textDecoration: 'none',\r\n    color:'black'\r\n  },\r\n  menuButton: {\r\n    color: '#fff',\r\n    fontSize: '18px',\r\n    marginRight: '-15px',\r\n    textTransform: 'none'\r\n  }\r\n};\r\n\r\nclass NavBarMenu extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, logoutUser, user } = this.props;\r\n    const { anchorEl } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          aria-owns={anchorEl ? 'right-menu' : null}\r\n          aria-haspopup=\"true\"\r\n          className={classes.menuButton}\r\n          onClick={this.handleClick}\r\n        >\r\n          <Avatar alt=\"Remy Sharp\"  className={classes.avatar} src={`https://robohash.org/${user.email}`} />\r\n          <h5 style={{padding:\"6px 0 0 5px\"}}>{user.name}</h5>\r\n        </Button>\r\n        <Menu\r\n          id=\"right-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n        >\r\n         <a className={classes.link} href=\"/\">\r\n            <MenuItem onClick={this.handleClose}>Home</MenuItem>\r\n          </a>\r\n          <a className={classes.link} href={`/profile/${user.userId}`}>\r\n            <MenuItem onClick={this.handleClose}>Profile</MenuItem>\r\n          </a>\r\n          <a className={classes.link} href=\"/discover\">\r\n            <MenuItem onClick={this.handleClose}>Discover</MenuItem>\r\n          </a>\r\n          <MenuItem onClick={() => logoutUser()}>Logout</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBarMenu);\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions/authAction';\r\nimport { compose } from 'redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NavBarMenu from '../components/navBarMenu';\r\n\r\n\r\nconst styles = {\r\n    \r\n    flex: {\r\n      flexGrow: 1\r\n    },\r\n    logo: {\r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20\r\n    },\r\n    root: {\r\n      flexGrow: 1\r\n    }\r\n};\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const {classes,user,logout} =this.props;\r\n        return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <Typography\r\n                    className={classes.flex}\r\n                    variant=\"title\"\r\n                    color=\"inherit\"\r\n                >\r\n                <a className={classes.logo} href=\"/\">\r\n                    My Network\r\n                </a>\r\n                </Typography>\r\n                <div >\r\n                    <NavBarMenu logoutUser={logout} user={user} />\r\n                </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n      </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.authReducer.user\r\n  });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout:()=> dispatch(logoutUser())\r\n})\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )\r\n  )(NavBar);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions/authAction';\r\nimport CreatePost from './createPost';\r\nimport PostFeed from '../components/postFeed';\r\nimport PropTypes from 'prop-types';\r\nimport NavBar from './navBar';\r\n\r\nclass HomePage extends Component {\r\n    componentDidMount = () =>{\r\n        if(!localStorage.jwtToken){\r\n            this.props.history.push('/login');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <NavBar />\r\n            <CreatePost />\r\n            <PostFeed />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nHomePage.propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  };\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout:()=> dispatch(logoutUser())\r\n})\r\n\r\nexport default connect(mapDispatchToProps)(HomePage);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { registerUser } from '../actions/authAction';\r\nimport '../css/authPage.css'\r\n\r\n\r\nclass registerPage extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            errors:{},\r\n            registered:false,\r\n            success:false\r\n        };\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n            errors:{},\r\n            success:false,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.error.success){\r\n            this.setState({\r\n                success:true\r\n            })\r\n        }\r\n        if(nextProps.error){\r\n            const message = nextProps.error.error;\r\n            this.setState({\r\n                errors:{message}\r\n            })\r\n        }\r\n      }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,password,confirmPassword} = this.state;\r\n        \r\n        if(password !== confirmPassword){\r\n                const message = 'Passwords do not match.'\r\n                this.setState({\r\n                    password:'',\r\n                    confirmPassword:'',\r\n                    errors:{message}\r\n                });\r\n                return ;\r\n        }\r\n        this.props.createUser({name,email,password});\r\n    };\r\n\r\n    render(){\r\n\r\n        const {errors,name,email,password,confirmPassword,success,loading} = this.state;\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <section id=\"content\">\r\n                    <form onSubmit = {this.handleSubmit} autoComplete = \"off\">\r\n                        <h1>Create a new account</h1>\r\n                        {errors.message && \r\n                            <p style={{textAlign:\"left\",marginLeft:\"10%\",border:\"2px solid red\",padding:\"4px\",maxWidth:\"290px\"}}>\r\n                             {errors.message}\r\n                            </p>\r\n                        }\r\n                        {success && \r\n                            <p style={{textAlign:\"left\",marginLeft:\"10%\",border:\"2px solid green\",padding:\"4px\",maxWidth:\"290px\"}}>\r\n                                 You have been registered successfully.<NavLink to='/login'>CLick Here</NavLink> to login. \r\n                            </p>\r\n                        }\r\n                        <div>\r\n                            <input type=\"text\" placeholder=\"name\" name=\"name\" value={name} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={this.handleChange} autocomplete=\"off\" required/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" value={confirmPassword} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"submit\" value=\"Register\" disabled={loading || success}/>\r\n                            <NavLink to=\"/login\">Log In</NavLink>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.authReducer,\r\n    error:state.errorReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    createUser:user => dispatch(registerUser(user))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(registerPage);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { loginUser } from '../actions/authAction';\r\nimport '../css/authPage.css'\r\n\r\n\r\nclass registerPage extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errors:{},\r\n        };\r\n    };\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push('/');\r\n        }\r\n    \r\n        if (nextProps.error) {\r\n        const {message} = nextProps.error;\r\n          this.setState({\r\n            errors: {message}\r\n          });\r\n        }\r\n      };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/');\r\n        }\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n            errors:{}\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"submitted\")\r\n        e.preventDefault();\r\n        const {email,password} = this.state;\r\n        const user = {\r\n            email,password\r\n        }\r\n        this.props.signIn(user);\r\n    };\r\n\r\n    render(){\r\n        const {errors,email,password} = this.state;\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <section id=\"content\">\r\n                    <form onSubmit = {this.handleSubmit}>\r\n                        <h1>Login to your account</h1>\r\n                        {errors.message && \r\n                            <p style={{textAlign:\"left\",marginLeft:\"10%\",border:\"2px solid red\",padding:\"4px\",maxWidth:\"290px\"}}>\r\n                             {errors.message}\r\n                            </p>\r\n                        }\r\n                        <div>\r\n                            <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"submit\" value=\"Log In\"/>\r\n                            <NavLink to=\"/register\">Register</NavLink>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.authReducer,\r\n    error:state.errorReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signIn :user => dispatch(loginUser(user))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(registerPage);","import React, { Component } from 'react';\r\nimport '../css/userCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass UserCard extends Component {\r\n    state = {\r\n      name: ''\r\n    };\r\n  \r\n    render(){\r\n        const {user} = this.props;\r\n        const ava = `https://robohash.org/${user.email}`\r\n        return (\r\n                <div class=\"center\">\r\n                        <div class=\"profile\">\r\n                            <div class=\"image\">\r\n                                <img src={ava} width=\"70\" height=\"70\" alt=\"ava\" />\r\n                            </div>\r\n                            <div class=\"name\">{user.name}</div>\r\n                            <div class=\"actions\">\r\n                            <Link to={`/profile/${user._id}`}>\r\n                                <button class=\"btn\">View</button>\r\n                            </Link>\r\n                                <button class=\"btn\" onClick = {() => this.props.followUser(this.props.currUserId,user._id)}>Follow</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"stats\">\r\n                            <div class=\"box\" >\r\n                                <span class=\"value\">{user.followers.length}</span>\r\n                                <span class=\"parameter\">Followers</span>\r\n                            </div>\r\n                            <div class=\"box\">\r\n                                <span class=\"value\">{user.following.length}</span>\r\n                                <span class=\"parameter\">Following</span>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    followUser,\r\n    getFollowing,\r\n    getUser,\r\n    getAllUsers,\r\n    unfollowUser\r\n} from '../actions/userAction';\r\nimport Loading from '../components/loading';\r\nimport UserCard from '../components/userCard';\r\nimport NavBar from './navBar';\r\n\r\nconst styles = theme => ({\r\n    cardGrid: {\r\n      padding: `${theme.spacing.unit * 4}px 0`\r\n    },\r\n    layout: {\r\n      width: 'auto',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3\r\n      }\r\n    }\r\n  });\r\n\r\nexport class DiscoverPage extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loading:true,\r\n            following:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.props.getAllUsers();\r\n        this.setState({\r\n            loading:false,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {userReducer,classes,authReducer} = this.props;\r\n        return this.state.loading?(\r\n            <>\r\n            <Loading />\r\n            <NavBar />\r\n            </>\r\n        ):(\r\n          <>\r\n          <NavBar />\r\n          <div className={classNames(classes.layout, classes.cardGrid)}>\r\n              <Grid container justify=\"center\">\r\n                {userReducer.allUsers.map(\r\n                  user =>{\r\n                    return (\r\n                      (user._id === authReducer.user.userId || user.followers.includes(authReducer.user.userId)) ? null : (\r\n                      <Grid item key={user._id} >\r\n                        <UserCard \r\n                          followUser = {this.props.followUser}\r\n                          user = {user}\r\n                          currUserId = {authReducer.user.userId}\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authReducer:state.authReducer,\r\n    userReducer:state.userReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    followUser: (userId,idToFollow) => dispatch(followUser(userId,idToFollow)),\r\n    getAllUsers : () => dispatch(getAllUsers()),\r\n});\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )\r\n  )(DiscoverPage);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/profilePage.css'\r\nimport {connect}  from 'react-redux';\r\nimport PostFeed from '../components/postFeed';\r\nimport Loading from '../components/loading';\r\nimport {getUser,followUser,unfollowUser, getFollowers, getFollowing} from '../actions/userAction';\r\nimport NavBar from './navBar'\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            loading:true,\r\n            pageUser:{}\r\n          };\r\n    }\r\n\r\n    componentDidMount = async() =>{\r\n        if(!localStorage.jwtToken)\r\n            return this.props.history.push('/login');\r\n        const {getUser,match} = this.props;\r\n         \r\n       getUser(match.params.id).then(res => {\r\n           this.setState({\r\n                pageUser:res.payload.user,\r\n                loading:false   \r\n           })\r\n       });\r\n\r\n    }\r\n\r\n    handleFollow = async (follows) =>{\r\n        const {signedInUser,followUser,unFollowUser,match} = this.props;\r\n        if(follows)\r\n            await unFollowUser(signedInUser.userId,match.params.id)\r\n        else\r\n            await followUser(signedInUser.userId,match.params.id)\r\n        await this.props.getUser(match.params.id).then(res => {\r\n            this.setState({\r\n                pageUser:res.payload.user\r\n            })\r\n        });\r\n    }\r\n    goToFollowing = () =>{\r\n        this.props.history.push('/followings');\r\n    }\r\n\r\n    goToFollowers = () =>{\r\n        this.props.history.push('/followers')\r\n    }\r\n  \r\n    render(){\r\n        const {loading,pageUser} = this.state;\r\n        const {signedInUser,match} = this.props;\r\n        const postCount = this.props.posts.filter(post => post.authorId === match.params.id).length;\r\n        return loading ? (\r\n            <>\r\n            <Loading />\r\n            <NavBar />\r\n            </>\r\n        ) : (\r\n            <>\r\n            <NavBar />\r\n            <div  style={{width:\"100%\",height:\"auto\"}}>\r\n                <div class=\"bg-white shadow rounded overflow-hidden\">\r\n                    <div class=\"px-4 pt-0 pb-4 cover\">\r\n                        <div class=\"media align-items-end profile-head mb-2\">\r\n                            <div class=\"profile mr-3\"><img src={`https://robohash.org/${pageUser.email}`} alt=\"...\" width=\"130\" class=\"rounded mb-2 img-thumbnail\" />\r\n                            {(signedInUser.userId !== match.params.id) && <button \r\n                                onClick = {() => this.handleFollow(pageUser.followers.includes(signedInUser.userId))}\r\n                                class=\"btn btn-outline-dark btn-sm btn-block\" style={{color:\"white\"}}>\r\n                                    {pageUser.followers.includes(signedInUser.userId)?\"Unfollow\":\"Follow\"}\r\n                             </button>}\r\n                            </div>\r\n                            <div class=\"media-body mb-5 text-white\">\r\n                                <h4 class=\"mt-0 mb-0\">{pageUser.name}</h4>\r\n                                <p class=\"small mb-4\"> <i class=\"fas fa-map-marker-alt \"></i>{pageUser.email}</p>\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{background:\"white\",width:\"45%\",marginRight:\"0\"}}/>\r\n                        <div class=\"d-flex justify-content-end text-center\">\r\n                        <ul class=\"list-inline\" style={{color:\"white\"}}>\r\n                            <li class=\"list-inline-item mr-4\">\r\n                                <h2 class=\"font-weight-bold d-block\">{postCount}</h2><small class=\"text-muted\"> <i class=\"fas fa-image \"></i>Posts</small>\r\n                            </li>\r\n                            <li class=\"list-inline-item mr-4 white\" onClick = {signedInUser.userId === match.params.id?this.goToFollowers:null} style={{cursor:(signedInUser.userId === match.params.id)?\"pointer\":\"\"}}>\r\n                                <h2 class=\"font-weight-bold d-block\">{pageUser.followers.length}</h2><small class=\"text-muted\"> <i class=\"fas fa-user \"></i>Followers</small>\r\n                            </li>\r\n                            <li class=\"list-inline-item white\" onClick = {signedInUser.userId === match.params.id?this.goToFollowing:null} style={{cursor:signedInUser.userId === match.params.id?\"pointer\":\"\"}}>\r\n                                <h2 class=\"font-weight-bold d-block\">{pageUser.following.length}</h2><small class=\"text-muted\"> <i class=\"fas fa-user\"></i>Following</small>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                    {(signedInUser.userId === match.params.id) && <PostFeed showMyPosts = {true}/>}\r\n                </div>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n   signedInUser:state.authReducer.user,\r\n   posts: state.postReducer.posts\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUser:id => dispatch(getUser(id)),\r\n    followUser: (userId,idToFollow) => dispatch(followUser(userId,idToFollow)),\r\n    unFollowUser: (userId,idToUnfollow) => dispatch(unfollowUser(userId,idToUnfollow)),\r\n    getFollowers: id => dispatch(getFollowers(id)),\r\n    getFollowing: id => dispatch(getFollowing(id))\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfilePage);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = {\r\n  link: {\r\n    outline: 'none',\r\n    textDecoration: 'none',\r\n    color:'black'\r\n  },\r\n  menuButton: {\r\n    color: '#fff',\r\n    fontSize: '18px',\r\n    marginRight: '-15px',\r\n    textTransform: 'none'\r\n  }\r\n};\r\n\r\nclass FollowerList extends Component {\r\n  state = {\r\n    user: {}\r\n  };\r\n  componentDidMount = () =>{\r\n      const {id,getUser} = this.props;\r\n      getUser(id).then((res) =>{\r\n          this.setState({\r\n              user:res.payload.user\r\n          })\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {user} = this.state;\r\n\r\n    return (\r\n        <Link to={`/profile/${user._id}`} style={{color:\"inherit\"}}>\r\n        <ListItem style={{borderLeft:\"1px solid green\",marginBottom:\"4px\"}}>\r\n        <ListItemAvatar>\r\n          <Avatar src = {`https://robohash.org/${user.email}`} style={{marginBottom:\"12px\"}}/>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={user.name}\r\n        />\r\n      </ListItem>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowerList;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport compose from 'recompose/compose';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { getFollowers, getUser } from '../actions/userAction';\r\nimport FollowerList from '../components/followerList';\r\nimport NavBar from './navBar';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n      },\r\n      demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n      },\r\n      title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n      },\r\n      grid:{\r\n        marginLeft:\"10%\"\r\n      }\r\n  });\r\n\r\nclass follower extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            postText:'',\r\n            followers:[]\r\n        };\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.createpost(this.state.postText,this.props.user);\r\n        this.setState({postText:''})\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n       await this.props.getUser(this.props.signedInUser.userId).then(res =>{\r\n           this.setState({\r\n               followers:res.payload.user.followers\r\n           })\r\n       })\r\n    }\r\n\r\n    render(){\r\n        const {followers} = this.state;\r\n        const { classes,user,getUser } = this.props;\r\n        return (\r\n            <>\r\n            <NavBar />\r\n            <Grid item xs={12} md={6} className={classes.grid}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                My Followers\r\n            </Typography>\r\n            <List dense={false}>\r\n                 {followers.map(followerId => {\r\n                    return (\r\n                        <FollowerList \r\n                        getUser = {getUser}\r\n                        id = {followerId}\r\n                        />\r\n                    )   \r\n                })}\r\n            </List>\r\n            </Grid>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    signedInUser:state.authReducer.user,\r\n    user:state.userReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    getUser: id => dispatch(getUser(id)),\r\n    getFollowers:id => dispatch(getFollowers(id))\r\n})\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(follower);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = {\r\n  link: {\r\n    outline: 'none',\r\n    textDecoration: 'none',\r\n    color:'black'\r\n  },\r\n  menuButton: {\r\n    color: '#fff',\r\n    fontSize: '18px',\r\n    marginRight: '-15px',\r\n    textTransform: 'none'\r\n  }\r\n};\r\n\r\nclass FollowingList extends Component {\r\n  state = {\r\n    user: {}\r\n  };\r\n  componentDidMount = () =>{\r\n      const {id,getUser} = this.props;\r\n      getUser(id).then((res) =>{\r\n          this.setState({\r\n              user:res.payload.user\r\n          })\r\n      })\r\n  }\r\n\r\n  Unfollow = async() =>{\r\n      const {id,signedInUserId,UnfollowUser} = this.props;\r\n      await UnfollowUser(signedInUserId,id);\r\n      this.props.reload();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {user} = this.state;\r\n\r\n    return (\r\n        \r\n        <ListItem style={{borderLeft:\"1px solid green\",marginBottom:\"4px\"}}>\r\n            <Link to={`/profile/${user._id}`} style={{color:\"inherit\",display:\"flex\"}}>\r\n                <ListItemAvatar>\r\n                    <Avatar src = {`https://robohash.org/${user.email}`} style={{marginBottom:\"12px\"}}/>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={user.name} />\r\n            </Link>\r\n            <ListItemSecondaryAction>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick = {this.Unfollow}>\r\n              Unfollow\r\n            </Button>\r\n            </ListItemSecondaryAction>\r\n         </ListItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowingList;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport compose from 'recompose/compose';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { getFollowers, getUser,unfollowUser } from '../actions/userAction';\r\nimport FollowingList from '../components/followingList';\r\nimport NavBar from './navBar';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n      },\r\n      demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n      },\r\n      title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n      },\r\n      grid:{\r\n        marginLeft:\"10%\"\r\n      }\r\n  });\r\n\r\nclass Followings extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            postText:'',\r\n            followings:[]\r\n        };\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.createpost(this.state.postText,this.props.user);\r\n        this.setState({postText:''})\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n       await this.props.getUser(this.props.signedInUser.userId).then(res =>{\r\n           this.setState({\r\n               followings:res.payload.user.following\r\n           })\r\n       })\r\n    }\r\n\r\n    render(){\r\n        const {followings} = this.state;\r\n        const { classes,getUser ,UnfollowUser} = this.props;\r\n        return (\r\n            <>\r\n            <NavBar />\r\n            <Grid item xs={12} md={6} className={classes.grid}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                My Followings\r\n            </Typography>\r\n            <List dense={false}>\r\n                 {followings.map(followId => {\r\n                    return (\r\n                        <FollowingList\r\n                        id = {followId}\r\n                        getUser = {getUser}\r\n                        signedInUserId = {this.props.signedInUser.userId}\r\n                        UnfollowUser = {UnfollowUser}\r\n                        reload = {this.componentDidMount}\r\n                        />\r\n                    )   \r\n                })}\r\n            </List>\r\n            </Grid>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    signedInUser:state.authReducer.user,\r\n    user:state.userReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    getUser: id => dispatch(getUser(id)),\r\n    getFollowers:id => dispatch(getFollowers(id)),\r\n    UnfollowUser: (userId,idToUnfollow) => dispatch(unfollowUser(userId,idToUnfollow)),\r\n})\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Followings);","import React from 'react';\r\nimport {HashRouter,BrowserRouter,Route,Switch,withRouter} from 'react-router-dom';\r\nimport withAnalytics,{initAnalytics} from 'react-with-analytics';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport HomePage from '../containers/homePage';\r\nimport registerPage from '../containers/registerPage';\r\nimport loginPage from \"../containers/loginPage\";\r\nimport discoverPage from '../containers/discoverPage';\r\nimport ProfilePage from '../containers/profilePage';\r\nimport followers from '../containers/followers';\r\nimport Followings from '../containers/followings';\r\n\r\ninitAnalytics('UA-126201794-1');\r\nconst history = createBrowserHistory();\r\n\r\nconst Root = () => (\r\n    <Switch>\r\n        <Route exact path ='/' component={HomePage} />\r\n        <Route path ='/register' component={registerPage} />\r\n        <Route path ='/login' component={loginPage} />\r\n        <Route path ='/discover' component={discoverPage} />\r\n        <Route path ='/profile/:id' component={ProfilePage} />\r\n        <Route path ='/followers' component={followers} />\r\n        <Route path ='/followings' component={Followings} />\r\n        <Route component={HomePage} />\r\n    </Switch>\r\n);\r\n\r\nconst App = withRouter(withAnalytics(Root));\r\n\r\nconst AppWithRouter = () =>(\r\n    <HashRouter basename={process.env.PUBLIC_URL} history={history} >\r\n        <App />\r\n    </HashRouter >\r\n);\r\n\r\nexport default AppWithRouter;","import React from 'react';\n\nimport AppWithRouter from './components/AppWithRouter';\n\nconst App = () => <AppWithRouter />;\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\n/* eslint-disable no-use-before-define */\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n/* eslint-enable no-use-before-define */\r\n/* eslint-disable no-param-reassign */\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n/* eslint-enable no-param-reassign */\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404\r\n        || response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {SET_CURR_USER} from '../actions/actionType';\r\nimport isNull from '../isNull';\r\n\r\nconst initialState = {\r\n    isAuthenticated:false,\r\n    user:{}\r\n}\r\n\r\nexport default function(state = initialState,action){\r\n    switch(action.type){\r\n        case SET_CURR_USER:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: !isNull(action.payload),\r\n                user:action.payload\r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n}","import {IND_NO_ERRORS ,GET_ERRORS} from '../actions/actionType';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state=initialState,action){\r\n    if(action.type === IND_NO_ERRORS || action.type === GET_ERRORS)\r\n        return action.payload;\r\n    return state;\r\n}","import {\r\n    GET_POST,\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    UPDATE_POST_LIKES,\r\n    ADD_COMMENT\r\n  } from '../actions/actionType';\r\n\r\n  const initState = {\r\n      posts : []\r\n  };\r\n\r\n  export default function(state=initState,action){\r\n      switch(action.type){\r\n        case GET_POST:\r\n            return {\r\n              ...state,\r\n              posts: action.payload\r\n            };\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts:[\r\n                    {\r\n                        _id:action.payload._id,\r\n                        author:action.payload.author,\r\n                        authorId:action.payload.authorId,\r\n                        comments:[],\r\n                        likers:action.payload.likers,\r\n                        likesCount:action.payload.likesCount,\r\n                        text:action.payload.text,\r\n                        timestamp:action.payload.timestamp\r\n                    },\r\n                    ...state.posts\r\n                ]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(({ _id }) => _id !== action.id)\r\n            };\r\n        case UPDATE_POST_LIKES:\r\n            return {\r\n                ...state,\r\n                posts:state.posts.map((post) =>{\r\n                    if(post._id === action.payload._id){\r\n                        return{\r\n                            ...post,\r\n                            likers:action.payload.likers,\r\n                            likesCount:action.payload.likesCount\r\n                        };\r\n                    }\r\n                    return post;\r\n                })\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                posts:state.posts.map((post) => {\r\n                    if(post._id == action.payload._id)\r\n                        return {\r\n                            ...post,\r\n                            comments:[\r\n                                ...post.comments,\r\n                                {\r\n                                    _id:action.payload.comments[action.payload.comments.length - 1]._id,\r\n                                    commenterId: action.commenterId,\r\n                                    text: action.text\r\n                                }\r\n                            ]\r\n                        }\r\n                    return post;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n      }\r\n  }","import {\r\n    GET_FOLLOWERS,\r\n    GET_FOLLOWING,\r\n    GET_USER,\r\n    GET_ALL_USERS,\r\n    UPDATE_FOLLOWERS,\r\n    UPDATE_FOLLOWING\r\n  } from '../actions/actionType';\r\n\r\n  const initState = {\r\n      allUsers : [],\r\n      followers:[],\r\n      following:[],\r\n      currUser:{}\r\n  };\r\n\r\n  export default function(state=initState,action){\r\n      switch(action.type){\r\n          case GET_FOLLOWERS:\r\n              return {\r\n                  ...state,\r\n                  followers:action.payload.user.followers\r\n              };\r\n          case GET_FOLLOWING:\r\n              return{\r\n                  ...state,\r\n                  following:action.payload.user.following\r\n              };\r\n          case GET_USER:\r\n              return {\r\n                  ...state,\r\n                  currUser:action.payload\r\n              };\r\n          case GET_ALL_USERS:\r\n              return {\r\n                  ...state,\r\n                  allUsers:action.payload\r\n              }\r\n          case UPDATE_FOLLOWERS:\r\n              return {\r\n                  ...state,\r\n                  allUsers:state.allUsers.map(user => (\r\n                        user._id === action.payload._id?{...user,followers:action.payload.followers}:user\r\n                      )\r\n                  )\r\n              }\r\n          case UPDATE_FOLLOWING:\r\n                return {\r\n                    ...state,\r\n                    following: action.payload.following\r\n                };\r\n          default:\r\n                return state;\r\n      }\r\n  }","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport postReducer from './postReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  authReducer,\r\n  errorReducer,\r\n  postReducer,\r\n  userReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport jwtDecode from 'jwt-decode';\r\nimport createStore from './store';\r\nimport setAuthToken from './setAuthToken';\r\nimport {logoutUser ,setCurrentUser} from './actions/authAction';\r\n\r\n\r\nconst store = createStore();\r\n\r\nif(localStorage.jwtToken) {\r\n  setAuthToken(localStorage.jwtToken);\r\n  const decoded = jwtDecode(localStorage.jwtToken);\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  const curr_time = Date.now()/1000;\r\n  if(decoded.exp < curr_time){\r\n    store.dispatch(logoutUser());\r\n    window.location.href = '/login';\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default () =>\r\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n"],"sourceRoot":""}